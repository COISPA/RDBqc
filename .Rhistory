max_age=30
error_min_age=data_age[data_age$Age<min_age, ]
error_max_age=data_age[data_age$Age>max_age, ]
error_min_age=data_age[data_age$Age<min_age, ]
error_max_age=data_age[data_age$Age>max_age, ]
if (nrow(error_min_age)!=0 | nrow(error_max_age)!=0){
err<-unique(c(as.character(error_min_age$Trip_code),as.character(error_max_age$Trip_code) ) )
} else {err<-0}
err
max_age=3
error_min_age=data_age[data_age$Age<min_age, ]
error_max_age=data_age[data_age$Age>max_age, ]
if (nrow(error_min_age)!=0 | nrow(error_max_age)!=0){
err<-unique(c(as.character(error_min_age$Trip_code),as.character(error_max_age$Trip_code) ) )
} else {err<-0}
err
library(RDBqc)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RDBqc)
library(pander)
library(data.table)
head(data_ex)
head(data_exampleCL)
check_LFD(data_ex,min_len=6, max_len=250)
check_LFD_comm_cat(data_ex)
check_AL(data_ex,min_age=0,max_age=5)
ls(tab_age,err)
array(tab_age,err)
list(tab_age,err)
library(RDBqc)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RDBqc)
library(pander)
library(data.table)
head(data_ex)
head(data_exampleCL)
check_LFD(data_ex,min_len=6, max_len=250)
check_LFD_comm_cat(data_ex)
check_AL(data_ex,min_age=0,max_age=5)
check_AL(data_ex,min_age=0,max_age=5)
check_AL(data_ex,min_age=0,max_age=5)
check_lw(data_ex,Min=0,Max=200)
library(RDBqc)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RDBqc)
library(pander)
library(data.table)
head(data_ex)
head(data_exampleCL)
check_LFD(data_ex,min_len=6, max_len=250)
check_LFD_comm_cat(data_ex)
check_AL(data_ex,min_age=0,max_age=5)
check_lw(data_ex,Min=0,Max=200)
err
data_example=data_ex
Length_class <- Individual_weight <-NULL
Min=0,Max=1000
Min=0
Max=30
Length_class <- Individual_weight <-NULL
ggplot(data=data_example, aes(x=Length_class,y= Individual_weight)) + geom_point(stat="identity",colour = "orangered1", fill = "orangered1", binwidth = 0.5) + facet_grid(Year~Sex)
error_min_weight=data_example[data_example$Individual_weight<Min, ]
error_max_weight=data_example[data_example$Individual_weight>Max, ]
nrow(error_min_weight)!=0 | nrow(error_max_weight)!=0
error_min_weight
error_max_weight
err <-unique(c(as.character(error_min_weight$Trip_code)),unique(as.character(error_max_weight$Trip_code) ) )
err
!is.na(any(err))
any(!is.na(err))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RDBqc)
library(pander)
library(data.table)
head(data_ex)
head(data_exampleCL)
check_LFD(data_ex,min_len=6, max_len=250)
check_LFD_comm_cat(data_ex)
check_AL(data_ex,min_age=0,max_age=5)
library(RDBqc)
check_lw(data_ex,Min=0,Max=200)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RDBqc)
library(pander)
library(data.table)
head(data_ex)
head(data_exampleCL)
check_LFD(data_ex,min_len=6, max_len=250)
check_LFD_comm_cat(data_ex)
check_AL(data_ex,min_age=0,max_age=5)
check_lw(data_ex,Min=0,Max=200)
library(RDBqc)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RDBqc)
library(pander)
library(data.table)
head(data_ex)
head(data_exampleCL)
check_LFD(data_ex,min_len=6, max_len=250)
check_LFD_comm_cat(data_ex)
check_AL(data_ex,min_age=0,max_age=5)
check_lw(data_ex,Min=0,Max=200)
library(RDBqc)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RDBqc)
library(pander)
library(data.table)
head(data_ex)
head(data_exampleCL)
check_LFD(data_ex,min_len=6, max_len=250)
check_LFD_comm_cat(data_ex)
check_AL(data_ex,min_age=0,max_age=5)
check_lw(data_ex,Min=0,Max=200)
check_mat(data_ex)
check_mat(data_ex)
library(RDBqc)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RDBqc)
library(pander)
library(data.table)
head(data_ex)
head(data_exampleCL)
check_LFD(data_ex,min_len=6, max_len=250)
check_LFD_comm_cat(data_ex)
check_AL(data_ex,min_age=0,max_age=5)
check_lw(data_ex,Min=0,Max=200)
check_mat(data_ex)
library(RDBqc)
library(RDBqc)
library(RDBqc)
library(pander)
library(data.table)
check_mat(data_ex)
library(RDBqc)
library(RDBqc)
library(pander)
library(data.table)
check_mat(data_ex)
data_example=data_ex
Length_class <- Number_at_length <-Maturity_Stage<-Sex<-Stage<-NULL
print(ggplot(data=data_example, aes(x=Length_class,y=Maturity_Stage ,col=Sex)) + geom_point(stat="identity", fill = "darkorchid4") + facet_grid(Year~ Sex))
# summary table of number of individuals by length class by maturity stage
data_sex=data_example[!is.na(data_example$Sex),]
tab_sex=aggregate(data_sex$Number_at_length,by=list(data_sex$Year,data_sex$Length_class),FUN="length")
colnames(tab_sex)=c("Year","Length_class","nb_sex_measurements")
# summary table of number of individuals by length class by maturity stage
data_mat=data_example[!is.na(data_example$Maturity_Stage),]
tab_mat=aggregate(data_mat$Number_at_length,by=list(data_mat$Year,data_mat$Length_class),FUN="length")
colnames(tab_mat)=c("Year","Length_class","nb_maturity_stage_measurements")
# Maturity ogive
data_mat=data_mat[(as.character(data_mat$Sex)== "F" | as.character(data_mat$Sex)== "M") & (!is.na(data_mat$Maturity_Stage) & data_mat$Maturity_Stage!=0),]
data_mat$Mature[as.character(data_mat$Maturity_Stage) %in% immature_stages]= 0
data_mat$Mature[!(as.character(data_mat$Maturity_Stage) %in% immature_stages)]= 1
mat=data_mat[data_mat$Mature==1,colnames(data_mat) %in%c("Year","Sex","Length_class","Mature","Number_at_length")]
immat=data_mat[data_mat$Mature==0,colnames(data_mat) %in%c("Year","Sex","Length_class","Mature","Number_at_length")]
merge= merge(mat,immat,by=c("Length_class","Year","Sex"),all=TRUE)
colnames(merge)[4]="Mature"
colnames(merge)[6]="Immature"
merge=merge[,c(1,2,3,4,6)]
merge[is.na(merge$Mature),]$Mature=0
merge[is.na(merge$Immature),]$Immature=0
merge$Total=merge$Mature+merge$Immature
#females
merge_temp=merge[as.character(merge$Sex)!="M"& as.character(merge$Sex)!="N",]
years= paste("(",min(merge_temp$Year),"-",max(merge_temp$Year),")",sep="")
Mat=aggregate(merge_temp$Mature,by=list(merge_temp$Length_class),FUN="sum")
Immat=aggregate(merge_temp$Immature,by=list(merge_temp$Length_class),FUN="sum")
merge_temp=merge(Mat,Immat,by=c("Group.1"), all=T)
colnames(merge_temp)=c("Length_class","Mature","Immature")
merge_temp$Total=rowSums(data.frame(merge_temp$Mature,merge_temp$Immature))
mod <- glm(cbind(merge_temp$Mature,merge_temp$Immature) ~ merge_temp$Length_class, family=binomial("logit"))
coeff=coefficients(mod)
L50=-coeff[1]/coeff[2]
IFM=summary(mod)$cov.scaled
I11=IFM[1,1]
I12=IFM[1,2]
I22=IFM[2,2]
SE_L50=sqrt((I11+2*L50*I12+(L50^2)*I22)/(coeff[2]^2))
#inverse of Information Fisher's Matrix
L75=(log(0.75/0.25)-coeff[1])/coeff[2]
L25=(log(0.25/0.75)-coeff[1])/coeff[2]
MR=L75-L25
SE_MR= 2*log(3,exp(1))/((coeff[2])^2)*sqrt(I22)
plot(merge_temp$Length_class, merge_temp$Mature/merge_temp$Total,cex=1.5,xlab="length(mm)",ylab="proportion of matures",main=paste("Females",years,sep=""))
lines(merge_temp$Length_class,predict(mod,new.data=merge_temp$Length_class,type="response"),col="deeppink3",lty=1,lwd=3)
legend("bottomright",paste(c("L50= ","MR= "),c(round(L50,3),round(MR,3)),"+/-",c(round(SE_L50,3),round(SE_MR,3))))
merge_temp
Length_class <- Number_at_length <-Maturity_Stage<-Sex<-Stage<-NULL
print(ggplot(data=data_example, aes(x=Length_class,y=Maturity_Stage ,col=Sex)) + geom_point(stat="identity", fill = "darkorchid4") + facet_grid(Year~ Sex))
# summary table of number of individuals by length class by maturity stage
data_sex=data_example[!is.na(data_example$Sex),]
tab_sex=aggregate(data_sex$Number_at_length,by=list(data_sex$Year,data_sex$Length_class),FUN="length")
colnames(tab_sex)=c("Year","Length_class","nb_sex_measurements")
# summary table of number of individuals by length class by maturity stage
data_mat=data_example[!is.na(data_example$Maturity_Stage),]
tab_mat=aggregate(data_mat$Number_at_length,by=list(data_mat$Year,data_mat$Length_class),FUN="length")
colnames(tab_mat)=c("Year","Length_class","nb_maturity_stage_measurements")
# Maturity ogive
data_mat=data_mat[(as.character(data_mat$Sex)== "F" | as.character(data_mat$Sex)== "M") & (!is.na(data_mat$Maturity_Stage) & data_mat$Maturity_Stage!=0),]
data_mat$Mature[as.character(data_mat$Maturity_Stage) %in% immature_stages]= 0
data_mat$Mature[!(as.character(data_mat$Maturity_Stage) %in% immature_stages)]= 1
mat=data_mat[data_mat$Mature==1,colnames(data_mat) %in%c("Year","Sex","Length_class","Mature","Number_at_length")]
immat=data_mat[data_mat$Mature==0,colnames(data_mat) %in%c("Year","Sex","Length_class","Mature","Number_at_length")]
merge= merge(mat,immat,by=c("Length_class","Year","Sex"),all=TRUE)
immature_stages
immature_stages=c("0","1","2a")
Length_class <- Number_at_length <-Maturity_Stage<-Sex<-Stage<-NULL
print(ggplot(data=data_example, aes(x=Length_class,y=Maturity_Stage ,col=Sex)) + geom_point(stat="identity", fill = "darkorchid4") + facet_grid(Year~ Sex))
# summary table of number of individuals by length class by maturity stage
data_sex=data_example[!is.na(data_example$Sex),]
tab_sex=aggregate(data_sex$Number_at_length,by=list(data_sex$Year,data_sex$Length_class),FUN="length")
colnames(tab_sex)=c("Year","Length_class","nb_sex_measurements")
# summary table of number of individuals by length class by maturity stage
data_mat=data_example[!is.na(data_example$Maturity_Stage),]
tab_mat=aggregate(data_mat$Number_at_length,by=list(data_mat$Year,data_mat$Length_class),FUN="length")
colnames(tab_mat)=c("Year","Length_class","nb_maturity_stage_measurements")
# Maturity ogive
data_mat=data_mat[(as.character(data_mat$Sex)== "F" | as.character(data_mat$Sex)== "M") & (!is.na(data_mat$Maturity_Stage) & data_mat$Maturity_Stage!=0),]
data_mat$Mature[as.character(data_mat$Maturity_Stage) %in% immature_stages]= 0
data_mat$Mature[!(as.character(data_mat$Maturity_Stage) %in% immature_stages)]= 1
mat=data_mat[data_mat$Mature==1,colnames(data_mat) %in%c("Year","Sex","Length_class","Mature","Number_at_length")]
immat=data_mat[data_mat$Mature==0,colnames(data_mat) %in%c("Year","Sex","Length_class","Mature","Number_at_length")]
merge= merge(mat,immat,by=c("Length_class","Year","Sex"),all=TRUE)
colnames(merge)[4]="Mature"
colnames(merge)[6]="Immature"
merge=merge[,c(1,2,3,4,6)]
merge[is.na(merge$Mature),]$Mature=0
merge[is.na(merge$Immature),]$Immature=0
merge$Total=merge$Mature+merge$Immature
#females
merge_temp=merge[as.character(merge$Sex)!="M"& as.character(merge$Sex)!="N",]
years= paste("(",min(merge_temp$Year),"-",max(merge_temp$Year),")",sep="")
Mat=aggregate(merge_temp$Mature,by=list(merge_temp$Length_class),FUN="sum")
Immat=aggregate(merge_temp$Immature,by=list(merge_temp$Length_class),FUN="sum")
merge_temp=merge(Mat,Immat,by=c("Group.1"), all=T)
colnames(merge_temp)=c("Length_class","Mature","Immature")
merge_temp$Total=rowSums(data.frame(merge_temp$Mature,merge_temp$Immature))
mod <- glm(cbind(merge_temp$Mature,merge_temp$Immature) ~ merge_temp$Length_class, family=binomial("logit"))
coeff=coefficients(mod)
L50=-coeff[1]/coeff[2]
IFM=summary(mod)$cov.scaled
I11=IFM[1,1]
I12=IFM[1,2]
I22=IFM[2,2]
SE_L50=sqrt((I11+2*L50*I12+(L50^2)*I22)/(coeff[2]^2))
#inverse of Information Fisher's Matrix
L75=(log(0.75/0.25)-coeff[1])/coeff[2]
L25=(log(0.25/0.75)-coeff[1])/coeff[2]
MR=L75-L25
SE_MR= 2*log(3,exp(1))/((coeff[2])^2)*sqrt(I22)
plot(merge_temp$Length_class, merge_temp$Mature/merge_temp$Total,cex=1.5,xlab="length(mm)",ylab="proportion of matures",main=paste("Females",years,sep=""))
lines(merge_temp$Length_class,predict(mod,new.data=merge_temp$Length_class,type="response"),col="deeppink3",lty=1,lwd=3)
legend("bottomright",paste(c("L50= ","MR= "),c(round(L50,3),round(MR,3)),"+/-",c(round(SE_L50,3),round(SE_MR,3))))
#males
merge_temp=merge[as.character(merge$Sex)!="F" & as.character(merge$Sex)!="N",]
years= paste("(",min(merge_temp$Year),"-",max(merge_temp$Year),")",sep="")
Mat=aggregate(merge_temp$Mature,by=list(merge_temp$Length_class),FUN="sum")
Immat=aggregate(merge_temp$Immature,by=list(merge_temp$Length_class),FUN="sum")
merge_temp=merge(Mat,Immat,by=c("Group.1"))
colnames(merge_temp)=c("Length_class","Mature","Immature")
merge_temp$Total=rowSums(data.frame(merge_temp$Mature,merge_temp$Immature))
mod <- glm(cbind(merge_temp$Mature,merge_temp$Immature) ~ merge_temp$Length_class, family=binomial("logit"))
coeff=coefficients(mod)
L50=-coeff[1]/coeff[2]
IFM=summary(mod)$cov.scaled
I11=IFM[1,1]
I12=IFM[1,2]
I22=IFM[2,2]
SE_L50=sqrt((I11+2*L50*I12+(L50^2)*I22)/(coeff[2]^2))
#inverse of Information Fisher's Matrix
L75=(log(0.75/0.25)-coeff[1])/coeff[2]
L25=(log(0.25/0.75)-coeff[1])/coeff[2]
MR=L75-L25
SE_MR= 2*log(3,exp(1))/((coeff[2])^2)*sqrt(I22)
plot(merge_temp$Length_class, merge_temp$Mature/merge_temp$Total,cex=1.5,xlab="length(mm)",ylab="proportion of matures",main=paste("Males",years,sep=""))
lines(merge_temp$Length_class,predict(mod,new.data=merge_temp$Length_class,type="response"),col="deepskyblue3",lty=1,lwd=3)
legend("bottomright",paste(c("L50= ","MR= "),c(round(L50,3),round(MR,3)),"+/-",c(round(SE_L50,3),round(SE_MR,3))))
dev.off()
Length_class <- Number_at_length <-Maturity_Stage<-Sex<-Stage<-NULL
print(ggplot(data=data_example, aes(x=Length_class,y=Maturity_Stage ,col=Sex)) + geom_point(stat="identity", fill = "darkorchid4") + facet_grid(Year~ Sex))
# summary table of number of individuals by length class by maturity stage
data_sex=data_example[!is.na(data_example$Sex),]
tab_sex=aggregate(data_sex$Number_at_length,by=list(data_sex$Year,data_sex$Length_class),FUN="length")
colnames(tab_sex)=c("Year","Length_class","nb_sex_measurements")
# summary table of number of individuals by length class by maturity stage
data_mat=data_example[!is.na(data_example$Maturity_Stage),]
tab_mat=aggregate(data_mat$Number_at_length,by=list(data_mat$Year,data_mat$Length_class),FUN="length")
colnames(tab_mat)=c("Year","Length_class","nb_maturity_stage_measurements")
# Maturity ogive
data_mat=data_mat[(as.character(data_mat$Sex)== "F" | as.character(data_mat$Sex)== "M") & (!is.na(data_mat$Maturity_Stage) & data_mat$Maturity_Stage!=0),]
data_mat$Mature[as.character(data_mat$Maturity_Stage) %in% immature_stages]= 0
data_mat$Mature[!(as.character(data_mat$Maturity_Stage) %in% immature_stages)]= 1
mat=data_mat[data_mat$Mature==1,colnames(data_mat) %in%c("Year","Sex","Length_class","Mature","Number_at_length")]
immat=data_mat[data_mat$Mature==0,colnames(data_mat) %in%c("Year","Sex","Length_class","Mature","Number_at_length")]
merge= merge(mat,immat,by=c("Length_class","Year","Sex"),all=TRUE)
colnames(merge)[4]="Mature"
colnames(merge)[6]="Immature"
merge=merge[,c(1,2,3,4,6)]
merge[is.na(merge$Mature),]$Mature=0
merge[is.na(merge$Immature),]$Immature=0
merge$Total=merge$Mature+merge$Immature
#females
merge_temp=merge[as.character(merge$Sex)!="M"& as.character(merge$Sex)!="N",]
years= paste("(",min(merge_temp$Year),"-",max(merge_temp$Year),")",sep="")
Mat=aggregate(merge_temp$Mature,by=list(merge_temp$Length_class),FUN="sum")
Immat=aggregate(merge_temp$Immature,by=list(merge_temp$Length_class),FUN="sum")
merge_temp=merge(Mat,Immat,by=c("Group.1"), all=T)
colnames(merge_temp)=c("Length_class","Mature","Immature")
merge_temp$Total=rowSums(data.frame(merge_temp$Mature,merge_temp$Immature))
mod <- glm(cbind(merge_temp$Mature,merge_temp$Immature) ~ merge_temp$Length_class, family=binomial("logit"))
coeff=coefficients(mod)
L50=-coeff[1]/coeff[2]
IFM=summary(mod)$cov.scaled
I11=IFM[1,1]
I12=IFM[1,2]
I22=IFM[2,2]
SE_L50=sqrt((I11+2*L50*I12+(L50^2)*I22)/(coeff[2]^2))
#inverse of Information Fisher's Matrix
L75=(log(0.75/0.25)-coeff[1])/coeff[2]
L25=(log(0.25/0.75)-coeff[1])/coeff[2]
MR=L75-L25
SE_MR= 2*log(3,exp(1))/((coeff[2])^2)*sqrt(I22)
plot(merge_temp$Length_class, merge_temp$Mature/merge_temp$Total,cex=1.5,xlab="length(mm)",ylab="proportion of matures",main=paste("Females",years,sep=""))
lines(merge_temp$Length_class,predict(mod,new.data=merge_temp$Length_class,type="response"),col="deeppink3",lty=1,lwd=3)
legend("bottomright",paste(c("L50= ","MR= "),c(round(L50,3),round(MR,3)),"+/-",c(round(SE_L50,3),round(SE_MR,3))))
#males
merge_temp=merge[as.character(merge$Sex)!="F" & as.character(merge$Sex)!="N",]
years= paste("(",min(merge_temp$Year),"-",max(merge_temp$Year),")",sep="")
Mat=aggregate(merge_temp$Mature,by=list(merge_temp$Length_class),FUN="sum")
Immat=aggregate(merge_temp$Immature,by=list(merge_temp$Length_class),FUN="sum")
merge_temp=merge(Mat,Immat,by=c("Group.1"))
colnames(merge_temp)=c("Length_class","Mature","Immature")
merge_temp$Total=rowSums(data.frame(merge_temp$Mature,merge_temp$Immature))
mod <- glm(cbind(merge_temp$Mature,merge_temp$Immature) ~ merge_temp$Length_class, family=binomial("logit"))
coeff=coefficients(mod)
L50=-coeff[1]/coeff[2]
IFM=summary(mod)$cov.scaled
I11=IFM[1,1]
I12=IFM[1,2]
I22=IFM[2,2]
SE_L50=sqrt((I11+2*L50*I12+(L50^2)*I22)/(coeff[2]^2))
#inverse of Information Fisher's Matrix
L75=(log(0.75/0.25)-coeff[1])/coeff[2]
L25=(log(0.25/0.75)-coeff[1])/coeff[2]
MR=L75-L25
SE_MR= 2*log(3,exp(1))/((coeff[2])^2)*sqrt(I22)
plot(merge_temp$Length_class, merge_temp$Mature/merge_temp$Total,cex=1.5,xlab="length(mm)",ylab="proportion of matures",main=paste("Males",years,sep=""))
lines(merge_temp$Length_class,predict(mod,new.data=merge_temp$Length_class,type="response"),col="deepskyblue3",lty=1,lwd=3)
legend("bottomright",paste(c("L50= ","MR= "),c(round(L50,3),round(MR,3)),"+/-",c(round(SE_L50,3),round(SE_MR,3))))
library(RDBqc)
library(RDBqc)
library(pander)
library(data.table)
check_mat(data_ex)
summarize_ind_meas(data_ex)
summarize_ind_meas(data_ex)
library(RDBqc)
summarize_ind_meas(data_ex)
library(RDBqc)
library(RDBqc)
library(pander)
library(data.table)
summarize_ind_meas(data_ex)
library(RDBqc)
library(pander)
library(data.table)
summarize_trips(data_ex)
check_loc(data_ex)
check_loc(data_ex)
install.packages("qpdf")
library(qpdf)
_R_CHECK_DOC_SIZES_=false
circabc= read.csv2("C:\\RDBqc\\Code-Location-v2.1_.csv",header=T)
circabc=circabc[,1:5]
circabc$Name=stri_enc_toascii(circabc$Name)
library(stringi)
circabc$Name=stri_enc_toascii(circabc$Name)
#save(circabc,file="data/circabc.rda",compress = "xz")
usethis::use_data(circabc,overwrite = TRUE)
load("C:/RDBqc/RDBqc/data/circabc.rda")
View(circabc)
circabc$Name
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
Catch_tab_example=read.table("C:\\RDBqc\\Catch_DPS9.csv")
Catch_tab_example=read.table("C:\\RDBqc\\Catch_DPS9.csv",sep=";",header=T)
usethis::use_data(Catch_tab_example)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
load("C:/RDBqc/RDBqc/data/Catch_tab_example.rda")
View(Catch_tab_example)
Catch_tab_example=read.table("C:\\RDBqc\\Catch_DPS9.csv",sep=",",header=T)
usethis::use_data(Catch_tab_example)
Catch_tab_example=read.table("C:\\RDBqc\\Catch_DPS9.csv",sep=",",header=T,overwrite=TRUE)
usethis::use_data(Catch_tab_example,overwrite=TRUE)
roxygen2::roxygenise()
head(Catch_tab_example)
Catch_tab_example=read.table("C:\\RDBqc\\Landing_DPS9.csv",sep=",",header=T)
Landing_tab_example=read.table("C:\\RDBqc\\Landing_DPS9.csv",sep=",",header=T)
usethis::use_data(Landing_tab_example,overwrite=TRUE)
roxygen2::roxygenise()
head(Landing_tab_example)
Landing_tab$SPECIES
Landing_coverage(Landing_tab_example,"DPS","ITA","9")
library(RDBqc)
Landing_coverage(Landing_tab_example,"DPS","ITA","9")
Landing_tab=Landing_tab_example
Landing_tab=Landing_tab[Landing_tab$SPECIES==SP & Landing_tab$COUNTRY==MS & Landing_tab$AREA==GSA,]
SP="DPS"
MS="ITA"
GSA="9"
Landing_tab=Landing_tab[Landing_tab$SPECIES==SP & Landing_tab$COUNTRY==MS & Landing_tab$AREA==GSA,]
Landing_tab
DISCARDS<- LANDINGS<-SP<-MS<-GSA<-COUNTRY<-AREA<-YEAR<-QUARTER<-VESSEL_LENGTH<- GEAR<- MESH_SIZE_RANGE<-FISHERY<-NULL
Summary_land_wt=aggregate(Landing_tab[,2:12]$LANDINGS,by=list(Landing_tab$COUNTRY, Landing_tab$YEAR, Landing_tab$QUARTER, Landing_tab$VESSEL_LENGTH, Landing_tab$GEAR, Landing_tab$MESH_SIZE_RANGE, Landing_tab$FISHERY,  Landing_tab$AREA,Landing_tab$SPECIES),FUN="sum")
colnames(Summary_land_wt)=c("COUNTRY", "YEAR", "QUARTER", "VESSEL_LENGTH", "GEAR", "MESH_SIZE_RANGE", "FISHERY",  "AREA","SPECIES",  "LANDINGS" )
Summary_land_wt[1:nrow(Summary_land_wt),1:ncol(Summary_land_wt)]
Landing_tab$Landing_tab[Landing_tab$Landing_tab==-1] <- 0
Landing_tab$Landing_tab[Landing_tab$LANDINGS==-1] <- 0
land_wt=Landing_tab %>% group_by(COUNTRY,AREA,YEAR,QUARTER,VESSEL_LENGTH, GEAR, MESH_SIZE_RANGE,FISHERY) %>% summarize(Landing_tab=sum(Landing_tab,na.rm=T))
libary(dplyr)
library(dplyr)
land_wt=Landing_tab %>% group_by(COUNTRY,AREA,YEAR,QUARTER,VESSEL_LENGTH, GEAR, MESH_SIZE_RANGE,FISHERY) %>% summarize(LANDINGS=sum(LANDINGS,na.rm=T))
data <- Landing_tab  %>%
group_by(YEAR, GEAR) %>%
summarise(LANDINGS = sum(LANDINGS,na.rm=T))
gr <- data.frame("YEAR"=seq(min(data$YEAR),max(data$YEAR),1),"GEAR"=rep(unique(data$GEAR),each=max(data$YEAR)-min(data$YEAR)+1),"LAND"=0)
data <- full_join(gr,data)
data[is.na(data)] <- 0
ggplot(data, aes(x=YEAR, y=LANDINGS, fill=GEAR)) +
geom_area(size=0.5, colour="black")+theme_bw()+
ggtitle(paste0("Landing_tab of ",SP, " in ", MS,"_GSA",GSA))+xlab("")+ylab("tonnes")+theme(legend.position = "bottom")+
scale_x_continuous(breaks=seq(min(data$YEAR),max(data$YEAR),2))
library(ggplot2)
ggplot(data, aes(x=YEAR, y=LANDINGS, fill=GEAR)) +
geom_area(size=0.5, colour="black")+theme_bw()+
ggtitle(paste0("Landing_tab of ",SP, " in ", MS,"_GSA",GSA))+xlab("")+ylab("tonnes")+theme(legend.position = "bottom")+
scale_x_continuous(breaks=seq(min(data$YEAR),max(data$YEAR),2))
SP
SP
Discard_tab_example=read.table("C:\\RDBqc\\Discard_DPS9.csv",sep=",",header=T)
usethis::use_data(Discard_tab_example,overwrite=TRUE)
roxygen2::roxygenise()
roxygen2::roxygenise()
ML_tab_example=read.table("C:\\RDBqc\\ML_DPS9.csv",sep=",",header=T)
usethis::use_data(ML_tab_example,overwrite=TRUE)
roxygen2::roxygenise()
ggplot(data=ML_tab[ML_tab$SEX%in% i,], aes(x=LENGTHCLASS,y= PRM,col=factor(START_YEAR))) + geom_line(stat="identity") +theme(legend.position = "bottom")
ML_tab=ML_tab_example
ggplot(data=ML_tab[ML_tab$SEX%in% i,], aes(x=LENGTHCLASS,y= PRM,col=factor(START_YEAR))) + geom_line(stat="identity") +theme(legend.position = "bottom")
i="M"
ggplot(data=ML_tab[ML_tab$SEX%in% i,], aes(x=LENGTHCLASS,y= PRM,col=factor(START_YEAR))) + geom_line(stat="identity") +theme(legend.position = "bottom")
+expand_limits(x = 0, y = 0)+
theme(
legend.text = element_text(color = "blue", size = 6))+guides(col=guide_legend(title="")
)}
ggplot(data=ML_tab[ML_tab$SEX%in% i,], aes(x=LENGTHCLASS,y= PRM,col=factor(START_YEAR))) + geom_line(stat="identity") +theme(legend.position = "bottom")
+expand_limits(x = 0, y = 0)
ggplot(data=ML_tab[ML_tab$SEX%in% i,], aes(x=LENGTHCLASS,y= PRM,col=factor(START_YEAR))) + geom_line(stat="identity") +theme(legend.position = "bottom") +expand_limits(x = 0, y = 0)+theme(legend.text = element_text(color = "blue", size = 6))+guides(col=guide_legend(title="")
)}
ggplot(data=ML_tab[ML_tab$SEX%in% i,], aes(x=LENGTHCLASS,y= PRM,col=factor(START_YEAR))) + geom_line(stat="identity") +theme(legend.position = "bottom") +expand_limits(x = 0, y = 0)+theme(legend.text = element_text(color = "blue", size = 6))+guides(col=guide_legend(title="")
)}
for (i in unique(ML_tab$SEX)){
ggplot(data=ML_tab[ML_tab$SEX%in% i,], aes(x=LENGTHCLASS,y= PRM,col=factor(START_YEAR))) + geom_line(stat="identity") +theme(legend.position = "bottom") +expand_limits(x = 0, y = 0)+theme(legend.text = element_text(color = "blue", size = 6))+guides(col=guide_legend(title="")
)}
for (i in unique(ML_tab$SEX)){
ggplot(data=ML_tab[ML_tab$SEX%in% i,], aes(x=LENGTHCLASS,y= PRM,col=factor(START_YEAR))) + geom_line(stat="identity") +theme(legend.position = "bottom") +expand_limits(x = 0, y = 0)+theme(legend.text = element_text(color = "blue", size = 6))+guides(col=guide_legend(title="")
)}
for (i in unique(ML_tab$SEX)){
ggplot(data=ML_tab[ML_tab$SEX%in% i,], aes(x=LENGTHCLASS,y= PRM,col=factor(START_YEAR))) + geom_line(stat="identity") +theme(legend.position = "bottom") +expand_limits(x = 0, y = 0)+theme(legend.text = element_text(color = "blue", size = 6))+guides(col=guide_legend(title="")
)}
i
ML_tab$SEX
for (i in unique(as.character(ML_tab$SEX))){
ggplot(data=ML_tab[ML_tab$SEX%in% i,], aes(x=LENGTHCLASS,y= PRM,col=factor(START_YEAR))) + geom_line(stat="identity") +theme(legend.position = "bottom") +expand_limits(x = 0, y = 0)+theme(legend.text = element_text(color = "blue", size = 6))+guides(col=guide_legend(title="")
)}
unique(as.character(ML_tab$SEX))
ML_tab[ML_tab$SEX==FALSE,]$SEX="F"
ML_tab
for (i in unique(as.character(ML_tab$SEX))){
ggplot(data=ML_tab[ML_tab$SEX%in% i,], aes(x=LENGTHCLASS,y= PRM,col=factor(START_YEAR))) + geom_line(stat="identity") +theme(legend.position = "bottom") +expand_limits(x = 0, y = 0)+theme(legend.text = element_text(color = "blue", size = 6))+guides(col=guide_legend(title="")
)}
ML_tab[ML_tab$SEX%in% i,]
MA_tab_example=read.table("C:\\RDBqc\\MA_DPS9.csv",sep=",",header=T)
usethis::use_data(MA_tab_example,overwrite=TRUE)
roxygen2::roxygenise()
