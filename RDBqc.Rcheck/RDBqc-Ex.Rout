
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "RDBqc"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "RDBqc-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('RDBqc')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("GP_check")
> ### * GP_check
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: GP_check
> ### Title: GP_tab (growth params) table check
> ### Aliases: GP_check
> 
> ### ** Examples
> 
> GP_check(GP_tab_example,"MUT","ITA","SA 18")
   COUNTRY  YEAR START_YEAR END_YEAR SPECIES SEX
1      ITA SA 18       2014     2014     MUT   C
2      ITA SA 18       2015     2015     MUT   C
3      ITA SA 18       2016     2016     MUT   C
4      ITA SA 18       2017     2017     MUT   C
5      ITA SA 18       2014     2014     MUT   F
6      ITA SA 18       2015     2015     MUT   F
7      ITA SA 18       2016     2016     MUT   F
8      ITA SA 18       2017     2017     MUT   F
9      ITA SA 18       2014     2014     MUT   M
10     ITA SA 18       2015     2015     MUT   M
11     ITA SA 18       2016     2016     MUT   M
12     ITA SA 18       2017     2017     MUT   M
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("GP_check", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("LW_check_MED_BS")
> ### * LW_check_MED_BS
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: LW_check_MED_BS
> ### Title: LW params in GP_tab (sex ratio at length) table check#'
> ### Aliases: LW_check_MED_BS
> 
> ### ** Examples
> 
> LW_check_MED_BS(GP_tab_example,"MUT","ITA","SA 18")
   COUNTRY  YEAR START_YEAR END_YEAR SPECIES SEX NA
1      ITA SA 18       2014     2014     MUT   C  1
2      ITA SA 18       2015     2015     MUT   C  1
3      ITA SA 18       2016     2016     MUT   C  1
4      ITA SA 18       2017     2017     MUT   C  1
5      ITA SA 18       2014     2014     MUT   F  1
6      ITA SA 18       2015     2015     MUT   F  1
7      ITA SA 18       2016     2016     MUT   F  1
8      ITA SA 18       2017     2017     MUT   F  1
9      ITA SA 18       2014     2014     MUT   M  1
10     ITA SA 18       2015     2015     MUT   M  1
11     ITA SA 18       2016     2016     MUT   M  1
12     ITA SA 18       2017     2017     MUT   M  1
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("LW_check_MED_BS", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Landing_coverage")
> ### * Landing_coverage
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Landing_coverage
> ### Title: Landing_cov: function to check the coverage in Landing table
> ### Aliases: Landing_coverage
> 
> ### ** Examples
> 
> Landing_coverage(Landing_tab_example,"DPS","ITA","9")
Joining, by = c("year", "gear")
   country year quarter vessel_length gear mesh_size_range fishery area species
1      ITA 2003      -1            -1  OTB          50D100      -1    9     DPS
2      ITA 2004      -1            -1  OTB          50D100      -1    9     DPS
3      ITA 2004      -1            -1  GNS              -1    DEMF    9     DPS
4      ITA 2007      -1            -1  GNS              -1    DEMF    9     DPS
5      ITA 2008      -1            -1  GNS              -1    DEMF    9     DPS
6      ITA 2014      -1            -1  GNS              -1    DEMF    9     DPS
7      ITA 2017       2            -1  GNS              -1    DEMF    9     DPS
8      ITA 2003      -1            -1  GTR              -1   DEMSP    9     DPS
9      ITA 2004      -1            -1  GTR              -1   DEMSP    9     DPS
10     ITA 2005      -1            -1  GTR              -1   DEMSP    9     DPS
11     ITA 2012      -1            -1  GTR              -1   DEMSP    9     DPS
12     ITA 2005      -1            -1  OTB          50D100   DEMSP    9     DPS
13     ITA 2006      -1            -1  OTB          50D100   DEMSP    9     DPS
14     ITA 2007      -1            -1  OTB          50D100   DEMSP    9     DPS
15     ITA 2008      -1            -1  OTB          50D100   DEMSP    9     DPS
16     ITA 2009      -1            -1  OTB          50D100   DEMSP    9     DPS
17     ITA 2010      -1            -1  OTB          50D100   DEMSP    9     DPS
18     ITA 2011      -1            -1  OTB          50D100   DEMSP    9     DPS
19     ITA 2012      -1            -1  OTB          50D100   DEMSP    9     DPS
20     ITA 2013      -1            -1  OTB          50D100   DEMSP    9     DPS
21     ITA 2014      -1            -1  OTB          50D100   DEMSP    9     DPS
22     ITA 2015      -1            -1  OTB          50D100   DEMSP    9     DPS
23     ITA 2016       1            -1  OTB          50D100   DEMSP    9     DPS
24     ITA 2017       1            -1  OTB          50D100   DEMSP    9     DPS
25     ITA 2016       2            -1  OTB          50D100   DEMSP    9     DPS
26     ITA 2017       2            -1  OTB          50D100   DEMSP    9     DPS
27     ITA 2016       3            -1  OTB          50D100   DEMSP    9     DPS
28     ITA 2017       3            -1  OTB          50D100   DEMSP    9     DPS
29     ITA 2016       4            -1  OTB          50D100   DEMSP    9     DPS
30     ITA 2017       4            -1  OTB          50D100   DEMSP    9     DPS
31     ITA 2008      -1            -1  OTB          50D100    DWSP    9     DPS
32     ITA 2010      -1            -1  OTB          50D100    DWSP    9     DPS
33     ITA 2011      -1            -1  OTB          50D100    DWSP    9     DPS
34     ITA 2012      -1            -1  OTB          50D100    DWSP    9     DPS
35     ITA 2013      -1            -1  OTB          50D100    DWSP    9     DPS
36     ITA 2014      -1            -1  OTB          50D100    DWSP    9     DPS
37     ITA 2015      -1            -1  OTB          50D100    DWSP    9     DPS
38     ITA 2016      -1            -1  OTB          50D100    DWSP    9     DPS
39     ITA 2005      -1            -1  OTB          50D100  MDDWSP    9     DPS
40     ITA 2006      -1            -1  OTB          50D100  MDDWSP    9     DPS
41     ITA 2007      -1            -1  OTB          50D100  MDDWSP    9     DPS
42     ITA 2008      -1            -1  OTB          50D100  MDDWSP    9     DPS
43     ITA 2009      -1            -1  OTB          50D100  MDDWSP    9     DPS
44     ITA 2010      -1            -1  OTB          50D100  MDDWSP    9     DPS
45     ITA 2011      -1            -1  OTB          50D100  MDDWSP    9     DPS
46     ITA 2012      -1            -1  OTB          50D100  MDDWSP    9     DPS
47     ITA 2013      -1            -1  OTB          50D100  MDDWSP    9     DPS
48     ITA 2014      -1            -1  OTB          50D100  MDDWSP    9     DPS
49     ITA 2015      -1            -1  OTB          50D100  MDDWSP    9     DPS
50     ITA 2016       1            -1  OTB          50D100  MDDWSP    9     DPS
51     ITA 2017       1            -1  OTB          50D100  MDDWSP    9     DPS
52     ITA 2016       2            -1  OTB          50D100  MDDWSP    9     DPS
53     ITA 2017       2            -1  OTB          50D100  MDDWSP    9     DPS
54     ITA 2016       3            -1  OTB          50D100  MDDWSP    9     DPS
55     ITA 2017       3            -1  OTB          50D100  MDDWSP    9     DPS
56     ITA 2016       4            -1  OTB          50D100  MDDWSP    9     DPS
57     ITA 2017       4            -1  OTB          50D100  MDDWSP    9     DPS
     landings
1  316.615971
2  367.431910
3    3.628830
4    2.263080
5    0.508290
6    0.027360
7    0.026880
8    5.933227
9    4.177760
10   0.517960
11   0.161160
12  41.955260
13  55.302990
14  89.849750
15 187.262190
16 238.541980
17 309.589920
18 404.501390
19 483.420540
20 426.367160
21 466.692420
22 663.633400
23 158.379000
24 168.457870
25 165.632000
26 226.377570
27 157.255000
28 163.881790
29 167.289000
30 171.422780
31   0.164650
32   9.691160
33   9.676960
34   5.543910
35   3.829750
36   2.112830
37   8.549960
38  10.478000
39 388.470180
40 407.103060
41 125.318150
42  66.065310
43  64.598710
44 154.013300
45 136.853120
46 132.123730
47 145.464160
48  92.632310
49 119.266000
50  15.353000
51  16.607640
52  79.350000
53  45.163590
54  61.089000
55  49.455210
56  20.785000
57  15.440050
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Landing_coverage", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MA_tab_check")
> ### * MA_tab_check
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MA_tab_check
> ### Title: MA_tab (maturity at age) table check
> ### Aliases: MA_tab_check
> 
> ### ** Examples
> 
> MA_tab_check(MA_tab_example,"DPS","ITA","9")
Warning: Ignoring unknown parameters: binwidth
   COUNTRY YEAR START_YEAR END_YEAR SPECIES   SEX
1      ITA    9       2006     2006     DPS FALSE
2      ITA    9       2007     2007     DPS FALSE
3      ITA    9       2008     2008     DPS FALSE
4      ITA    9       2009     2009     DPS FALSE
5      ITA    9       2010     2010     DPS FALSE
6      ITA    9       2011     2011     DPS FALSE
7      ITA    9       2012     2012     DPS FALSE
8      ITA    9       2013     2013     DPS FALSE
9      ITA    9       2014     2014     DPS FALSE
10     ITA    9       2015     2015     DPS FALSE
11     ITA    9       2016     2016     DPS FALSE
12     ITA    9       2017     2016     DPS FALSE
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MA_tab_check", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_Catch_coverage")
> ### * MEDBS_Catch_coverage
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_Catch_coverage
> ### Title: Catch_cov: function to check the coverage in Catch table
> ### Aliases: MEDBS_Catch_coverage
> 
> ### ** Examples
> 
> MEDBS_Catch_coverage(Catch_tab_example,"DPS","ITA","9")
Joining, by = c("YEAR", "GEAR")
Joining, by = c("YEAR", "GEAR")
[[1]]
   COUNTRY YEAR QUARTER VESSEL_LENGTH GEAR MESH_SIZE_RANGE FISHERY AREA SPECIES
1      ITA 2004      -1            -1  OTB          50D100      -1    9     DPS
2      ITA 2004      -1            -1  GNS              -1    DEMF    9     DPS
3      ITA 2007      -1            -1  GNS              -1    DEMF    9     DPS
4      ITA 2008      -1            -1  GNS              -1    DEMF    9     DPS
5      ITA 2014      -1            -1  GNS              -1    DEMF    9     DPS
6      ITA 2017       2            -1  GNS              -1    DEMF    9     DPS
7      ITA 2003      -1            -1  GTR              -1   DEMSP    9     DPS
8      ITA 2004      -1            -1  GTR              -1   DEMSP    9     DPS
9      ITA 2005      -1            -1  GTR              -1   DEMSP    9     DPS
10     ITA 2012      -1            -1  GTR              -1   DEMSP    9     DPS
11     ITA 2003      -1            -1  OTB              -1   DEMSP    9     DPS
12     ITA 2005      -1            -1  OTB          50D100   DEMSP    9     DPS
13     ITA 2006      -1            -1  OTB          50D100   DEMSP    9     DPS
14     ITA 2007      -1            -1  OTB          50D100   DEMSP    9     DPS
15     ITA 2008      -1            -1  OTB          50D100   DEMSP    9     DPS
16     ITA 2009      -1            -1  OTB          50D100   DEMSP    9     DPS
17     ITA 2010      -1            -1  OTB          50D100   DEMSP    9     DPS
18     ITA 2011      -1            -1  OTB          50D100   DEMSP    9     DPS
19     ITA 2012      -1            -1  OTB          50D100   DEMSP    9     DPS
20     ITA 2013      -1            -1  OTB          50D100   DEMSP    9     DPS
21     ITA 2014      -1            -1  OTB          50D100   DEMSP    9     DPS
22     ITA 2015      -1            -1  OTB          50D100   DEMSP    9     DPS
23     ITA 2016       1            -1  OTB          50D100   DEMSP    9     DPS
24     ITA 2017       1            -1  OTB          50D100   DEMSP    9     DPS
25     ITA 2016       2            -1  OTB          50D100   DEMSP    9     DPS
26     ITA 2017       2            -1  OTB          50D100   DEMSP    9     DPS
27     ITA 2016       3            -1  OTB          50D100   DEMSP    9     DPS
28     ITA 2017       3            -1  OTB          50D100   DEMSP    9     DPS
29     ITA 2016       4            -1  OTB          50D100   DEMSP    9     DPS
30     ITA 2017       4            -1  OTB          50D100   DEMSP    9     DPS
31     ITA 2008      -1            -1  OTB          50D100    DWSP    9     DPS
32     ITA 2010      -1            -1  OTB          50D100    DWSP    9     DPS
33     ITA 2011      -1            -1  OTB          50D100    DWSP    9     DPS
34     ITA 2012      -1            -1  OTB          50D100    DWSP    9     DPS
35     ITA 2013      -1            -1  OTB          50D100    DWSP    9     DPS
36     ITA 2014      -1            -1  OTB          50D100    DWSP    9     DPS
37     ITA 2015      -1            -1  OTB          50D100    DWSP    9     DPS
38     ITA 2016      -1            -1  OTB          50D100    DWSP    9     DPS
39     ITA 2005      -1            -1  OTB          50D100  MDDWSP    9     DPS
40     ITA 2006      -1            -1  OTB          50D100  MDDWSP    9     DPS
41     ITA 2007      -1            -1  OTB          50D100  MDDWSP    9     DPS
42     ITA 2008      -1            -1  OTB          50D100  MDDWSP    9     DPS
43     ITA 2009      -1            -1  OTB          50D100  MDDWSP    9     DPS
44     ITA 2010      -1            -1  OTB          50D100  MDDWSP    9     DPS
45     ITA 2011      -1            -1  OTB          50D100  MDDWSP    9     DPS
46     ITA 2012      -1            -1  OTB          50D100  MDDWSP    9     DPS
47     ITA 2013      -1            -1  OTB          50D100  MDDWSP    9     DPS
48     ITA 2014      -1            -1  OTB          50D100  MDDWSP    9     DPS
49     ITA 2015      -1            -1  OTB          50D100  MDDWSP    9     DPS
50     ITA 2016       1            -1  OTB          50D100  MDDWSP    9     DPS
51     ITA 2017       1            -1  OTB          50D100  MDDWSP    9     DPS
52     ITA 2016       2            -1  OTB          50D100  MDDWSP    9     DPS
53     ITA 2017       2            -1  OTB          50D100  MDDWSP    9     DPS
54     ITA 2016       3            -1  OTB          50D100  MDDWSP    9     DPS
55     ITA 2017       3            -1  OTB          50D100  MDDWSP    9     DPS
56     ITA 2016       4            -1  OTB          50D100  MDDWSP    9     DPS
57     ITA 2017       4            -1  OTB          50D100  MDDWSP    9     DPS
     LANDINGS
1  367.431910
2    3.628830
3    2.263080
4    0.508290
5    0.027360
6    0.026880
7    5.933227
8    4.177760
9    0.517960
10   0.161160
11 316.615971
12  41.955260
13  55.302990
14  89.849750
15 187.262190
16 238.541980
17 309.589920
18 404.501390
19 483.420540
20 426.367160
21 466.692420
22 663.633400
23 158.379000
24 168.457870
25 165.632000
26 226.377570
27 157.255000
28 163.881790
29 167.289000
30 171.422780
31   0.164650
32   9.691160
33   9.676960
34   5.543910
35   3.829750
36   2.112830
37   8.549960
38  10.478000
39 388.470180
40 407.103060
41 125.318150
42  66.065310
43  64.598710
44 154.013300
45 136.853120
46 132.123730
47 145.464160
48  92.632310
49 119.266000
50  15.353000
51  16.607640
52  79.350000
53  45.163590
54  61.089000
55  49.455210
56  20.785000
57  15.440050

[[2]]
   COUNTRY YEAR QUARTER VESSEL_LENGTH GEAR MESH_SIZE_RANGE FISHERY AREA SPECIES
5      ITA 2014      -1            -1  GNS              -1    DEMF    9     DPS
6      ITA 2017       2            -1  GNS              -1    DEMF    9     DPS
7      ITA 2003      -1            -1  GTR              -1   DEMSP    9     DPS
10     ITA 2012      -1            -1  GTR              -1   DEMSP    9     DPS
11     ITA 2003      -1            -1  OTB              -1   DEMSP    9     DPS
13     ITA 2006      -1            -1  OTB          50D100   DEMSP    9     DPS
16     ITA 2009      -1            -1  OTB          50D100   DEMSP    9     DPS
17     ITA 2010      -1            -1  OTB          50D100   DEMSP    9     DPS
18     ITA 2011      -1            -1  OTB          50D100   DEMSP    9     DPS
19     ITA 2012      -1            -1  OTB          50D100   DEMSP    9     DPS
20     ITA 2013      -1            -1  OTB          50D100   DEMSP    9     DPS
21     ITA 2014      -1            -1  OTB          50D100   DEMSP    9     DPS
22     ITA 2015      -1            -1  OTB          50D100   DEMSP    9     DPS
23     ITA 2016       1            -1  OTB          50D100   DEMSP    9     DPS
24     ITA 2017       1            -1  OTB          50D100   DEMSP    9     DPS
25     ITA 2016       2            -1  OTB          50D100   DEMSP    9     DPS
26     ITA 2017       2            -1  OTB          50D100   DEMSP    9     DPS
27     ITA 2016       3            -1  OTB          50D100   DEMSP    9     DPS
28     ITA 2017       3            -1  OTB          50D100   DEMSP    9     DPS
29     ITA 2016       4            -1  OTB          50D100   DEMSP    9     DPS
30     ITA 2017       4            -1  OTB          50D100   DEMSP    9     DPS
33     ITA 2011      -1            -1  OTB          50D100    DWSP    9     DPS
34     ITA 2012      -1            -1  OTB          50D100    DWSP    9     DPS
35     ITA 2013      -1            -1  OTB          50D100    DWSP    9     DPS
37     ITA 2015      -1            -1  OTB          50D100    DWSP    9     DPS
38     ITA 2016      -1            -1  OTB          50D100    DWSP    9     DPS
40     ITA 2006      -1            -1  OTB          50D100  MDDWSP    9     DPS
43     ITA 2009      -1            -1  OTB          50D100  MDDWSP    9     DPS
44     ITA 2010      -1            -1  OTB          50D100  MDDWSP    9     DPS
45     ITA 2011      -1            -1  OTB          50D100  MDDWSP    9     DPS
46     ITA 2012      -1            -1  OTB          50D100  MDDWSP    9     DPS
47     ITA 2013      -1            -1  OTB          50D100  MDDWSP    9     DPS
48     ITA 2014      -1            -1  OTB          50D100  MDDWSP    9     DPS
49     ITA 2015      -1            -1  OTB          50D100  MDDWSP    9     DPS
50     ITA 2016       1            -1  OTB          50D100  MDDWSP    9     DPS
51     ITA 2017       1            -1  OTB          50D100  MDDWSP    9     DPS
52     ITA 2016       2            -1  OTB          50D100  MDDWSP    9     DPS
53     ITA 2017       2            -1  OTB          50D100  MDDWSP    9     DPS
54     ITA 2016       3            -1  OTB          50D100  MDDWSP    9     DPS
55     ITA 2017       3            -1  OTB          50D100  MDDWSP    9     DPS
56     ITA 2016       4            -1  OTB          50D100  MDDWSP    9     DPS
57     ITA 2017       4            -1  OTB          50D100  MDDWSP    9     DPS
    DISCARDS
5   0.000000
6   0.000000
7   0.000000
10  0.000000
11  0.000000
13  0.000000
16 38.355420
17 24.396528
18 60.519315
19  6.571266
20 26.761695
21 44.978926
22 89.320018
23  4.321935
24 16.215517
25  2.726606
26 10.594472
27 18.256248
28  0.000000
29  4.391166
30 14.491513
33  0.000000
34  0.000000
35  0.000000
37  0.000000
38  0.000000
40  0.000000
43  0.000000
44  2.703603
45  2.743526
46  0.996779
47  3.279211
48  0.000000
49  0.000000
50  1.122239
51  0.165092
52  4.120538
53  0.000000
54  0.000000
55  0.000000
56  0.000000
57  0.000000

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_Catch_coverage", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_check_duplicates")
> ### * MEDBS_check_duplicates
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_check_duplicates
> ### Title: Check for duplicated data rows
> ### Aliases: MEDBS_check_duplicates
> 
> ### ** Examples
> 
> MEDBS_check_duplicates(data=Discard_tab_example,type="d",MS="ITA",GSA="9",SP="DPS",verbose=TRUE)
No duplicated records in the data.
NULL
> MEDBS_check_duplicates(data=Landing_tab_example,type="l",MS="ITA",GSA="9",SP="DPS",verbose=TRUE)
No duplicated records in the data.
NULL
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_check_duplicates", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_comp_disc_YQ")
> ### * MEDBS_comp_disc_YQ
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_comp_disc_YQ
> ### Title: Comparison between discards in weight by quarter and -1
> ### Aliases: MEDBS_comp_disc_YQ
> 
> ### ** Examples
> 
> MEDBS_comp_disc_YQ(disc=Discard_tab_example,MS="ITA",GSA=9,SP="DPS")
  year gear    tot_q    tot_yr ratio
1 2009  OTB       NA 38.355420    NA
2 2010  OTB       NA 27.100131    NA
3 2011  OTB       NA 63.262841    NA
4 2012  OTB       NA  7.568045    NA
5 2013  OTB       NA 30.040906    NA
6 2014  OTB       NA 44.978926    NA
7 2015  OTB       NA 89.320018    NA
8 2016  OTB 34.93873        NA    NA
9 2017  OTB 41.46659        NA    NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_comp_disc_YQ", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_comp_disc_YQ_fishery")
> ### * MEDBS_comp_disc_YQ_fishery
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_comp_disc_YQ_fishery
> ### Title: Comparison between discards in weight by quarter, quarter -1 and
> ###   by fishery
> ### Aliases: MEDBS_comp_disc_YQ_fishery
> 
> ### ** Examples
> 
> MEDBS_comp_disc_YQ_fishery(disc=Discard_tab_example,MS="ITA",GSA=9,SP="DPS")
   year gear fishery     tot_q    tot_yr ratio
1  2009  OTB   DEMSP        NA 38.355420    NA
2  2010  OTB   DEMSP        NA 24.396528    NA
3  2010  OTB  MDDWSP        NA  2.703603    NA
4  2011  OTB   DEMSP        NA 60.519315    NA
5  2011  OTB  MDDWSP        NA  2.743526    NA
6  2012  OTB   DEMSP        NA  6.571266    NA
7  2012  OTB  MDDWSP        NA  0.996779    NA
8  2013  OTB   DEMSP        NA 26.761695    NA
9  2013  OTB  MDDWSP        NA  3.279211    NA
10 2014  OTB   DEMSP        NA 44.978926    NA
11 2015  OTB   DEMSP        NA 89.320018    NA
12 2016  OTB   DEMSP 29.695955        NA    NA
13 2016  OTB  MDDWSP  5.242777        NA    NA
14 2017  OTB   DEMSP 41.301502        NA    NA
15 2017  OTB  MDDWSP  0.165092        NA    NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_comp_disc_YQ_fishery", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_comp_land_Q_VL")
> ### * MEDBS_comp_land_Q_VL
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_comp_land_Q_VL
> ### Title: Comparison between landings in weight by quarter accounting for
> ###   vessel length
> ### Aliases: MEDBS_comp_land_Q_VL
> 
> ### ** Examples
> 
> MEDBS_comp_land_Q_VL(land=Landing_tab_example,MS="ITA",GSA=9,SP="DPS")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
   year gear quarter     tot_VL tot_NoVL ratio
1  2003  GTR      -1   5.933227       NA    NA
2  2003  OTB      -1 316.615971       NA    NA
3  2004  GNS      -1   3.628830       NA    NA
4  2004  GTR      -1   4.177760       NA    NA
5  2004  OTB      -1 367.431910       NA    NA
6  2005  GTR      -1   0.517960       NA    NA
7  2005  OTB      -1 430.425440       NA    NA
8  2006  OTB      -1 462.406050       NA    NA
9  2007  GNS      -1   2.263080       NA    NA
10 2007  OTB      -1 215.167900       NA    NA
11 2008  GNS      -1   0.508290       NA    NA
12 2008  OTB      -1 253.492150       NA    NA
13 2009  OTB      -1 303.140690       NA    NA
14 2010  OTB      -1 473.294380       NA    NA
15 2011  OTB      -1 551.031470       NA    NA
16 2012  GTR      -1   0.161160       NA    NA
17 2012  OTB      -1 621.088180       NA    NA
18 2013  OTB      -1 575.661070       NA    NA
19 2014  GNS      -1   0.027360       NA    NA
20 2014  OTB      -1 561.437560       NA    NA
21 2015  OTB      -1 791.449360       NA    NA
22 2016  OTB      -1  10.478000       NA    NA
23 2016  OTB       1 173.732000       NA    NA
24 2016  OTB       2 244.982000       NA    NA
25 2016  OTB       3 218.344000       NA    NA
26 2016  OTB       4 188.074000       NA    NA
27 2017  GNS       2   0.026880       NA    NA
28 2017  OTB       1 185.065510       NA    NA
29 2017  OTB       2 271.541160       NA    NA
30 2017  OTB       3 213.337000       NA    NA
31 2017  OTB       4 186.862830       NA    NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_comp_land_Q_VL", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_comp_land_Q_VL_fishery")
> ### * MEDBS_comp_land_Q_VL_fishery
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_comp_land_Q_VL_fishery
> ### Title: Comparison between landings in weight by quarter and fishery
> ###   accounting for vessel length
> ### Aliases: MEDBS_comp_land_Q_VL_fishery
> 
> ### ** Examples
> 
> MEDBS_comp_land_Q_VL_fishery(land=Landing_tab_example,MS="ITA",GSA=9,SP="DPS")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
   year gear fishery quarter     tot_VL tot_NoVL ratio
1  2003  GTR   DEMSP      -1   5.933227       NA    NA
2  2003  OTB      -1      -1 316.615971       NA    NA
3  2004  GNS    DEMF      -1   3.628830       NA    NA
4  2004  GTR   DEMSP      -1   4.177760       NA    NA
5  2004  OTB      -1      -1 367.431910       NA    NA
6  2005  GTR   DEMSP      -1   0.517960       NA    NA
7  2005  OTB   DEMSP      -1  41.955260       NA    NA
8  2005  OTB  MDDWSP      -1 388.470180       NA    NA
9  2006  OTB   DEMSP      -1  55.302990       NA    NA
10 2006  OTB  MDDWSP      -1 407.103060       NA    NA
11 2007  GNS    DEMF      -1   2.263080       NA    NA
12 2007  OTB   DEMSP      -1  89.849750       NA    NA
13 2007  OTB  MDDWSP      -1 125.318150       NA    NA
14 2008  GNS    DEMF      -1   0.508290       NA    NA
15 2008  OTB   DEMSP      -1 187.262190       NA    NA
16 2008  OTB    DWSP      -1   0.164650       NA    NA
17 2008  OTB  MDDWSP      -1  66.065310       NA    NA
18 2009  OTB   DEMSP      -1 238.541980       NA    NA
19 2009  OTB  MDDWSP      -1  64.598710       NA    NA
20 2010  OTB   DEMSP      -1 309.589920       NA    NA
21 2010  OTB    DWSP      -1   9.691160       NA    NA
22 2010  OTB  MDDWSP      -1 154.013300       NA    NA
23 2011  OTB   DEMSP      -1 404.501390       NA    NA
24 2011  OTB    DWSP      -1   9.676960       NA    NA
25 2011  OTB  MDDWSP      -1 136.853120       NA    NA
26 2012  GTR   DEMSP      -1   0.161160       NA    NA
27 2012  OTB   DEMSP      -1 483.420540       NA    NA
28 2012  OTB    DWSP      -1   5.543910       NA    NA
29 2012  OTB  MDDWSP      -1 132.123730       NA    NA
30 2013  OTB   DEMSP      -1 426.367160       NA    NA
31 2013  OTB    DWSP      -1   3.829750       NA    NA
32 2013  OTB  MDDWSP      -1 145.464160       NA    NA
33 2014  GNS    DEMF      -1   0.027360       NA    NA
34 2014  OTB   DEMSP      -1 466.692420       NA    NA
35 2014  OTB    DWSP      -1   2.112830       NA    NA
36 2014  OTB  MDDWSP      -1  92.632310       NA    NA
37 2015  OTB   DEMSP      -1 663.633400       NA    NA
38 2015  OTB    DWSP      -1   8.549960       NA    NA
39 2015  OTB  MDDWSP      -1 119.266000       NA    NA
40 2016  OTB   DEMSP       1 158.379000       NA    NA
41 2016  OTB   DEMSP       2 165.632000       NA    NA
42 2016  OTB   DEMSP       3 157.255000       NA    NA
43 2016  OTB   DEMSP       4 167.289000       NA    NA
44 2016  OTB    DWSP      -1  10.478000       NA    NA
45 2016  OTB  MDDWSP       1  15.353000       NA    NA
46 2016  OTB  MDDWSP       2  79.350000       NA    NA
47 2016  OTB  MDDWSP       3  61.089000       NA    NA
48 2016  OTB  MDDWSP       4  20.785000       NA    NA
49 2017  GNS    DEMF       2   0.026880       NA    NA
50 2017  OTB   DEMSP       1 168.457870       NA    NA
51 2017  OTB   DEMSP       2 226.377570       NA    NA
52 2017  OTB   DEMSP       3 163.881790       NA    NA
53 2017  OTB   DEMSP       4 171.422780       NA    NA
54 2017  OTB  MDDWSP       1  16.607640       NA    NA
55 2017  OTB  MDDWSP       2  45.163590       NA    NA
56 2017  OTB  MDDWSP       3  49.455210       NA    NA
57 2017  OTB  MDDWSP       4  15.440050       NA    NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_comp_land_Q_VL_fishery", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_comp_land_YQ")
> ### * MEDBS_comp_land_YQ
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_comp_land_YQ
> ### Title: Comparison between landings in weight by quarter and -1
> ### Aliases: MEDBS_comp_land_YQ
> 
> ### ** Examples
> 
> MEDBS_comp_land_YQ(land=Landing_tab_example,MS="ITA",GSA=11,SP="ARA")
data frame with 0 columns and 0 rows
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_comp_land_YQ", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_comp_land_YQ_fishery")
> ### * MEDBS_comp_land_YQ_fishery
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_comp_land_YQ_fishery
> ### Title: Comparison between landings in weight by quarter, quarter -1 and
> ###   by fishery
> ### Aliases: MEDBS_comp_land_YQ_fishery
> 
> ### ** Examples
> 
> MEDBS_comp_land_YQ_fishery(land=Landing_tab_example,MS="ITA",GSA=9,SP="DPS")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
   year gear fishery     tot_q     tot_yr ratio
1  2003  GTR   DEMSP        NA   5.933227    NA
2  2003  OTB      -1        NA 316.615971    NA
3  2004  GNS    DEMF        NA   3.628830    NA
4  2004  GTR   DEMSP        NA   4.177760    NA
5  2004  OTB      -1        NA 367.431910    NA
6  2005  GTR   DEMSP        NA   0.517960    NA
7  2005  OTB   DEMSP        NA  41.955260    NA
8  2005  OTB  MDDWSP        NA 388.470180    NA
9  2006  OTB   DEMSP        NA  55.302990    NA
10 2006  OTB  MDDWSP        NA 407.103060    NA
11 2007  GNS    DEMF        NA   2.263080    NA
12 2007  OTB   DEMSP        NA  89.849750    NA
13 2007  OTB  MDDWSP        NA 125.318150    NA
14 2008  GNS    DEMF        NA   0.508290    NA
15 2008  OTB   DEMSP        NA 187.262190    NA
16 2008  OTB    DWSP        NA   0.164650    NA
17 2008  OTB  MDDWSP        NA  66.065310    NA
18 2009  OTB   DEMSP        NA 238.541980    NA
19 2009  OTB  MDDWSP        NA  64.598710    NA
20 2010  OTB   DEMSP        NA 309.589920    NA
21 2010  OTB    DWSP        NA   9.691160    NA
22 2010  OTB  MDDWSP        NA 154.013300    NA
23 2011  OTB   DEMSP        NA 404.501390    NA
24 2011  OTB    DWSP        NA   9.676960    NA
25 2011  OTB  MDDWSP        NA 136.853120    NA
26 2012  GTR   DEMSP        NA   0.161160    NA
27 2012  OTB   DEMSP        NA 483.420540    NA
28 2012  OTB    DWSP        NA   5.543910    NA
29 2012  OTB  MDDWSP        NA 132.123730    NA
30 2013  OTB   DEMSP        NA 426.367160    NA
31 2013  OTB    DWSP        NA   3.829750    NA
32 2013  OTB  MDDWSP        NA 145.464160    NA
33 2014  GNS    DEMF        NA   0.027360    NA
34 2014  OTB   DEMSP        NA 466.692420    NA
35 2014  OTB    DWSP        NA   2.112830    NA
36 2014  OTB  MDDWSP        NA  92.632310    NA
37 2015  OTB   DEMSP        NA 663.633400    NA
38 2015  OTB    DWSP        NA   8.549960    NA
39 2015  OTB  MDDWSP        NA 119.266000    NA
40 2016  OTB   DEMSP 648.55500         NA    NA
41 2016  OTB  MDDWSP 176.57700         NA    NA
42 2016  OTB    DWSP        NA  10.478000    NA
43 2017  GNS    DEMF   0.02688         NA    NA
44 2017  OTB   DEMSP 730.14001         NA    NA
45 2017  OTB  MDDWSP 126.66649         NA    NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_comp_land_YQ_fishery", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_disc_mean_weight")
> ### * MEDBS_disc_mean_weight
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_disc_mean_weight
> ### Title: Mean weight by year,gear and fishery aggregation
> ### Aliases: MEDBS_disc_mean_weight
> 
> ### ** Examples
> 
> MEDBS_disc_mean_weight(disc=Discard_tab_example,MS="ITA",GSA=9,SP="DPS")
   year quarter vessel_length gear mesh_size_range fishery     totW        totN
1  2009      -1            -1  OTB          50D100   DEMSP 38355420 11316810.38
2  2010      -1            -1  OTB          50D100   DEMSP 24396528  6011330.55
3  2010      -1            -1  OTB          50D100  MDDWSP  2703603   345221.92
4  2011      -1            -1  OTB          50D100   DEMSP 60519315 29133415.70
5  2011      -1            -1  OTB          50D100  MDDWSP  2743526   744126.69
6  2012      -1            -1  OTB          50D100   DEMSP  6571266   998155.99
7  2012      -1            -1  OTB          50D100  MDDWSP   996779   248456.15
8  2013      -1            -1  OTB          50D100   DEMSP 26761695  5388744.99
9  2013      -1            -1  OTB          50D100  MDDWSP  3279211   368850.27
10 2014      -1            -1  OTB          50D100   DEMSP 44978926 13087620.01
11 2015      -1            -1  OTB          50D100   DEMSP 89320018 28892278.51
12 2016       1            -1  OTB          50D100   DEMSP  4321935   855369.91
13 2016       1            -1  OTB          50D100  MDDWSP  1122239   134472.23
14 2016       2            -1  OTB          50D100   DEMSP  2726606   985633.21
15 2016       2            -1  OTB          50D100  MDDWSP  4120538   698085.54
16 2016       3            -1  OTB          50D100   DEMSP 18256248  4970257.08
17 2016       4            -1  OTB          50D100   DEMSP  4391166  1268510.80
18 2017       1            -1  OTB          50D100   DEMSP 16215517  4137803.32
19 2017       1            -1  OTB          50D100  MDDWSP   165092    27304.41
20 2017       2            -1  OTB          50D100   DEMSP 10594472  1662097.19
21 2017       4            -1  OTB          50D100   DEMSP 14491513  3122364.50
         MW
1  3.389243
2  4.058424
3  7.831493
4  2.077316
5  3.686907
6  6.583406
7  4.011891
8  4.966220
9  8.890358
10 3.436754
11 3.091484
12 5.052709
13 8.345507
14 2.766350
15 5.902626
16 3.673099
17 3.461670
18 3.918871
19 6.046350
20 6.374159
21 4.641198
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_disc_mean_weight", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_discard_coverage")
> ### * MEDBS_discard_coverage
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_discard_coverage
> ### Title: Discard_cov: function to check the coverage in Discard table
> ### Aliases: MEDBS_discard_coverage
> 
> ### ** Examples
> 
> MEDBS_discard_coverage(Discard_tab_example,"DPS","ITA","9")
Joining, by = c("year", "gear")
   country year quarter vessel_length gear mesh_size_range fishery area species
1      ITA 2009      -1            -1  OTB          50D100   DEMSP    9     DPS
2      ITA 2010      -1            -1  OTB          50D100   DEMSP    9     DPS
3      ITA 2011      -1            -1  OTB          50D100   DEMSP    9     DPS
4      ITA 2012      -1            -1  OTB          50D100   DEMSP    9     DPS
5      ITA 2013      -1            -1  OTB          50D100   DEMSP    9     DPS
6      ITA 2014      -1            -1  OTB          50D100   DEMSP    9     DPS
7      ITA 2015      -1            -1  OTB          50D100   DEMSP    9     DPS
8      ITA 2016       1            -1  OTB          50D100   DEMSP    9     DPS
9      ITA 2017       1            -1  OTB          50D100   DEMSP    9     DPS
10     ITA 2016       2            -1  OTB          50D100   DEMSP    9     DPS
11     ITA 2017       2            -1  OTB          50D100   DEMSP    9     DPS
12     ITA 2016       3            -1  OTB          50D100   DEMSP    9     DPS
13     ITA 2016       4            -1  OTB          50D100   DEMSP    9     DPS
14     ITA 2017       4            -1  OTB          50D100   DEMSP    9     DPS
15     ITA 2010      -1            -1  OTB          50D100  MDDWSP    9     DPS
16     ITA 2011      -1            -1  OTB          50D100  MDDWSP    9     DPS
17     ITA 2012      -1            -1  OTB          50D100  MDDWSP    9     DPS
18     ITA 2013      -1            -1  OTB          50D100  MDDWSP    9     DPS
19     ITA 2016       1            -1  OTB          50D100  MDDWSP    9     DPS
20     ITA 2017       1            -1  OTB          50D100  MDDWSP    9     DPS
21     ITA 2016       2            -1  OTB          50D100  MDDWSP    9     DPS
    discards
1  38.355420
2  24.396528
3  60.519315
4   6.571266
5  26.761695
6  44.978926
7  89.320018
8   4.321935
9  16.215517
10  2.726606
11 10.594472
12 18.256248
13  4.391166
14 14.491513
15  2.703603
16  2.743526
17  0.996779
18  3.279211
19  1.122239
20  0.165092
21  4.120538
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_discard_coverage", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_ks")
> ### * MEDBS_ks
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_ks
> ### Title: Kolmogorov-Smirnov test
> ### Aliases: MEDBS_ks
> 
> ### ** Examples
> 
> MEDBS_ks(data=Landing_tab_example, type="l",MS="ITA",GSA="9", SP="DPS",Rt=1)
Warning in melt.data.table(dat, id.vars = c("year", "area", "species", "unit",  :
  'measure.vars' [0, 1, 2, 3, ...] are not all of the same type. By order of hierarchy, the molten data value column will be of type 'double'. All measure variables not of type 'double' will be coerced too. Check DETAILS in ?melt.data.table for more on coercion.
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
Joining, by = c("year", "gear", "fishery")
[[1]]
             Group   NTot_yr1   NTot_yr2  Dmax       Dcalc H0_p0.05
Ds    2003 vs 2004 18516.4188 22257.6320 0.091 0.017207590 rejected
Ds1   2005 vs 2006  6167.4468  3434.8575 0.728 0.036832124 rejected
Ds2   2005 vs 2007  6167.4468  7099.2807 0.589 0.030113978 rejected
Ds3   2005 vs 2008  6167.4468 19314.2268 0.415 0.025302807 rejected
Ds4   2005 vs 2009  6167.4468 22104.5065 0.445 0.024913279 rejected
Ds5   2005 vs 2010  6167.4468 36354.8893 0.407 0.023824322 rejected
Ds6   2005 vs 2011  6167.4468 33511.1976 0.566 0.023970486 rejected
Ds7   2005 vs 2012  6167.4468 45388.0064 0.475 0.023477949 rejected
Ds8   2005 vs 2013  6167.4468 38036.9772 0.536 0.023747794 rejected
Ds9   2005 vs 2014  6167.4468 44673.9978 0.425 0.023500382 rejected
Ds10  2005 vs 2015  6167.4468 79992.6246 0.423 0.022862381 rejected
Ds11  2005 vs 2016  6167.4468 81778.3668 0.376 0.022844506 rejected
Ds12  2005 vs 2017  6167.4468 84250.4070 0.453 0.022820991 rejected
Ds13  2006 vs 2007  3434.8575  7099.2807 0.244 0.035957052 rejected
Ds14  2006 vs 2008  3434.8575 19314.2268 0.417 0.032035761 rejected
Ds15  2006 vs 2009  3434.8575 22104.5065 0.371 0.031728999 rejected
Ds16  2006 vs 2010  3434.8575 36354.8893 0.499 0.030881324 rejected
Ds17  2006 vs 2011  3434.8575 33511.1976 0.225 0.030994227 rejected
Ds18  2006 vs 2012  3434.8575 45388.0064 0.360 0.030614898 rejected
Ds19  2006 vs 2013  3434.8575 38036.9772 0.283 0.030822323 rejected
Ds20  2006 vs 2014  3434.8575 44673.9978 0.379 0.030632105 rejected
Ds21  2006 vs 2015  3434.8575 79992.6246 0.494 0.030145420 rejected
Ds22  2006 vs 2016  3434.8575 81778.3668 0.582 0.030131866 rejected
Ds23  2006 vs 2017  3434.8575 84250.4070 0.485 0.030114042 rejected
Ds24  2007 vs 2008  7099.2807 19314.2268 0.208 0.024011169 rejected
Ds25  2007 vs 2009  7099.2807 22104.5065 0.148 0.023600332 rejected
Ds26  2007 vs 2010  7099.2807 36354.8893 0.287 0.022447772 rejected
Ds27  2007 vs 2011  7099.2807 33511.1976 0.112 0.022602840 rejected
Ds28  2007 vs 2012  7099.2807 45388.0064 0.170 0.022079815 rejected
Ds29  2007 vs 2013  7099.2807 38036.9772 0.166 0.022366535 rejected
Ds30  2007 vs 2014  7099.2807 44673.9978 0.168 0.022103668 rejected
Ds31  2007 vs 2015  7099.2807 79992.6246 0.291 0.021424113 rejected
Ds32  2007 vs 2016  7099.2807 81778.3668 0.344 0.021405037 rejected
Ds33  2007 vs 2017  7099.2807 84250.4070 0.274 0.021379939 rejected
Ds34  2008 vs 2009 19314.2268 22104.5065 0.099 0.017039837 rejected
Ds35  2008 vs 2010 19314.2268 36354.8893 0.123 0.015403989 rejected
Ds36  2008 vs 2011 19314.2268 33511.1976 0.216 0.015629100 rejected
Ds37  2008 vs 2012 19314.2268 45388.0064 0.076 0.014862659 rejected
Ds38  2008 vs 2013 19314.2268 38036.9772 0.173 0.015285361 rejected
Ds39  2008 vs 2014 19314.2268 44673.9978 0.051 0.014898072 rejected
Ds40  2008 vs 2015 19314.2268 79992.6246 0.131 0.013869860 rejected
Ds41  2008 vs 2016 19314.2268 81778.3668 0.167 0.013840376 rejected
Ds42  2008 vs 2017 19314.2268 84250.4070 0.100 0.013801528 rejected
Ds43  2009 vs 2010 22104.5065 36354.8893 0.186 0.014755415 rejected
Ds44  2009 vs 2011 22104.5065 33511.1976 0.152 0.014990269 rejected
Ds45  2009 vs 2012 22104.5065 45388.0064 0.057 0.014189364 rejected
Ds46  2009 vs 2013 22104.5065 38036.9772 0.098 0.014631531 rejected
Ds47  2009 vs 2014 22104.5065 44673.9978 0.057 0.014226453 rejected
Ds48  2009 vs 2015 22104.5065 79992.6246 0.186 0.013145814 rejected
Ds49  2009 vs 2016 22104.5065 81778.3668 0.218 0.013114703 rejected
Ds50  2009 vs 2017 22104.5065 84250.4070 0.169 0.013073699 rejected
Ds51  2010 vs 2011 36354.8893 33511.1976 0.285 0.013100954 rejected
Ds52  2010 vs 2012 36354.8893 45388.0064 0.165 0.012176407 rejected
Ds53  2010 vs 2013 36354.8893 38036.9772 0.231 0.012688913 rejected
Ds54  2010 vs 2014 36354.8893 44673.9978 0.158 0.012219606 rejected
Ds55  2010 vs 2015 36354.8893 79992.6246 0.018 0.010942543 rejected
Ds56  2010 vs 2016 36354.8893 81778.3668 0.085 0.010905148 rejected
Ds57  2010 vs 2017 36354.8893 84250.4070 0.048 0.010855801 rejected
Ds58  2011 vs 2012 33511.1976 45388.0064 0.155 0.012459967 rejected
Ds59  2011 vs 2013 33511.1976 38036.9772 0.081 0.012961266 rejected
Ds60  2011 vs 2014 33511.1976 44673.9978 0.177 0.012502187 rejected
Ds61  2011 vs 2015 33511.1976 79992.6246 0.279 0.011257226 rejected
Ds62  2011 vs 2016 33511.1976 81778.3668 0.369 0.011220880 rejected
Ds63  2011 vs 2017 33511.1976 84250.4070 0.263 0.011172928 rejected
Ds64  2012 vs 2013 45388.0064 38036.9772 0.101 0.012025984 rejected
Ds65  2012 vs 2014 45388.0064 44673.9978 0.056 0.011529725 rejected
Ds66  2012 vs 2015 45388.0064 79992.6246 0.173 0.010166367 rejected
Ds67  2012 vs 2016 45388.0064 81778.3668 0.222 0.010126106 rejected
Ds68  2012 vs 2017 45388.0064 84250.4070 0.145 0.010072944 rejected
Ds69  2013 vs 2014 38036.9772 44673.9978 0.131 0.012069722 rejected
Ds70  2013 vs 2015 38036.9772 79992.6246 0.226 0.010774909 rejected
Ds71  2013 vs 2016 38036.9772 81778.3668 0.316 0.010736930 rejected
Ds72  2013 vs 2017 38036.9772 84250.4070 0.210 0.010686806 rejected
Ds73  2014 vs 2015 44673.9978 79992.6246 0.166 0.010218069 rejected
Ds74  2014 vs 2016 44673.9978 81778.3668 0.209 0.010178012 rejected
Ds75  2014 vs 2017 44673.9978 84250.4070 0.138 0.010125122 rejected
Ds76  2015 vs 2016 79992.6246 81778.3668 0.094 0.008603046 rejected
Ds77  2015 vs 2017 79992.6246 84250.4070 0.053 0.008540408 rejected
Ds78  2016 vs 2017 81778.3668 84250.4070 0.108 0.008492441 rejected
Ds79  2015 vs 2016   642.2149   790.8995 0.066 0.091893688 accepted
Ds110 2005 vs 2007 21880.6741  7752.0696 0.368 0.022866140 rejected
Ds210 2005 vs 2008 21880.6741  4435.7073 0.308 0.028487045 rejected
Ds310 2005 vs 2009 21880.6741  3812.3634 0.465 0.030361717 rejected
Ds410 2005 vs 2010 21880.6741  9331.8055 0.452 0.021389324 rejected
Ds510 2005 vs 2011 21880.6741 11755.3435 0.213 0.019783375 rejected
Ds610 2005 vs 2012 21880.6741 10095.1211 0.226 0.020814724 rejected
Ds710 2005 vs 2013 21880.6741  9298.0326 0.483 0.021416538 rejected
Ds81  2005 vs 2014 21880.6741  6507.8207 0.531 0.024426945 rejected
Ds91  2005 vs 2015 21880.6741  8149.9182 0.449 0.022450245 rejected
Ds101 2005 vs 2016 21880.6741 13961.6128 0.182 0.018738974 rejected
Ds111 2005 vs 2017 21880.6741  9442.0391 0.374 0.021301616 rejected
Ds121 2007 vs 2008  7752.0696  4435.7073 0.127 0.032570024 rejected
Ds131 2007 vs 2009  7752.0696  3812.3634 0.143 0.034221757 rejected
Ds141 2007 vs 2010  7752.0696  9331.8055 0.121 0.026585671 rejected
Ds151 2007 vs 2011  7752.0696 11755.3435 0.212 0.025311591 rejected
Ds161 2007 vs 2012  7752.0696 10095.1211 0.180 0.026125610 rejected
Ds171 2007 vs 2013  7752.0696  9298.0326 0.159 0.026607571 rejected
Ds181 2007 vs 2014  7752.0696  6507.8207 0.226 0.029085570 rejected
Ds191 2007 vs 2015  7752.0696  8149.9182 0.191 0.027446461 rejected
Ds201 2007 vs 2016  7752.0696 13961.6128 0.245 0.024503957 rejected
Ds211 2007 vs 2017  7752.0696  9442.0391 0.212 0.026515157 rejected
Ds221 2008 vs 2009  4435.7073  3812.3634 0.161 0.038207067 rejected
Ds231 2008 vs 2010  4435.7073  9331.8055 0.148 0.031550741 rejected
Ds241 2008 vs 2011  4435.7073 11755.3435 0.207 0.030484882 rejected
Ds251 2008 vs 2012  4435.7073 10095.1211 0.135 0.031164064 rejected
Ds261 2008 vs 2013  4435.7073  9298.0326 0.183 0.031569197 rejected
Ds271 2008 vs 2014  4435.7073  6507.8207 0.230 0.033684147 rejected
Ds281 2008 vs 2015  4435.7073  8149.9182 0.148 0.032279399 rejected
Ds291 2008 vs 2016  4435.7073 13961.6128 0.213 0.029817701 rejected
Ds301 2008 vs 2017  4435.7073  9442.0391 0.115 0.031491347 rejected
Ds311 2009 vs 2010  3812.3634  9331.8055 0.052 0.033253142 rejected
Ds321 2009 vs 2011  3812.3634 11755.3435 0.296 0.032243607 rejected
Ds331 2009 vs 2012  3812.3634 10095.1211 0.241 0.032886487 rejected
Ds341 2009 vs 2013  3812.3634  9298.0326 0.107 0.033270653 rejected
Ds351 2009 vs 2014  3812.3634  6507.8207 0.211 0.035283763 rejected
Ds361 2009 vs 2015  3812.3634  8149.9182 0.179 0.033945276 rejected
Ds371 2009 vs 2016  3812.3634 13961.6128 0.337 0.031613564 rejected
Ds381 2009 vs 2017  3812.3634  9442.0391 0.199 0.033196794 rejected
Ds391 2010 vs 2011  9331.8055 11755.3435 0.282 0.023985818 rejected
Ds401 2010 vs 2012  9331.8055 10095.1211 0.227 0.024843315 rejected
Ds411 2010 vs 2013  9331.8055  9298.0326 0.085 0.025349668 rejected
Ds421 2010 vs 2014  9331.8055  6507.8207 0.190 0.027939456 rejected
Ds431 2010 vs 2015  9331.8055  8149.9182 0.146 0.026228821 rejected
Ds441 2010 vs 2016  9331.8055 13961.6128 0.318 0.023131941 rejected
Ds451 2010 vs 2017  9331.8055  9442.0391 0.168 0.025252651 rejected
Ds461 2011 vs 2012 11755.3435 10095.1211 0.218 0.023474860 rejected
Ds471 2011 vs 2013 11755.3435  9298.0326 0.276 0.024010090 rejected
Ds481 2011 vs 2014 11755.3435  6507.8207 0.320 0.026729982 rejected
Ds491 2011 vs 2015 11755.3435  8149.9182 0.243 0.024936515 rejected
Ds501 2011 vs 2016 11755.3435 13961.6128 0.218 0.021655610 rejected
Ds511 2011 vs 2017 11755.3435  9442.0391 0.218 0.023907638 rejected
Ds521 2012 vs 2013 10095.1211  9298.0326 0.264 0.024866750 rejected
Ds531 2012 vs 2014 10095.1211  6507.8207 0.312 0.027502050 rejected
Ds541 2012 vs 2015 10095.1211  8149.9182 0.230 0.025762388 rejected
Ds551 2012 vs 2016 10095.1211 13961.6128 0.104 0.022601688 rejected
Ds561 2012 vs 2017 10095.1211  9442.0391 0.155 0.024767841 rejected
Ds571 2013 vs 2014  9298.0326  6507.8207 0.119 0.027960295 rejected
Ds581 2013 vs 2015  9298.0326  8149.9182 0.074 0.026251019 rejected
Ds591 2013 vs 2016  9298.0326 13961.6128 0.301 0.023157108 rejected
Ds601 2013 vs 2017  9298.0326  9442.0391 0.122 0.025275706 rejected
Ds611 2014 vs 2015  6507.8207  8149.9182 0.121 0.028759755 rejected
Ds621 2014 vs 2016  6507.8207 13961.6128 0.348 0.025966501 rejected
Ds631 2014 vs 2017  6507.8207  9442.0391 0.166 0.027872367 rejected
Ds641 2015 vs 2016  8149.9182 13961.6128 0.271 0.024116323 rejected
Ds651 2015 vs 2017  8149.9182  9442.0391 0.092 0.026157345 rejected
Ds661 2016 vs 2017 13961.6128  9442.0391 0.202 0.023050865 rejected
                            Comment         ID
Ds    not belong to same population     OTB_-1
Ds1   not belong to same population  OTB_DEMSP
Ds2   not belong to same population  OTB_DEMSP
Ds3   not belong to same population  OTB_DEMSP
Ds4   not belong to same population  OTB_DEMSP
Ds5   not belong to same population  OTB_DEMSP
Ds6   not belong to same population  OTB_DEMSP
Ds7   not belong to same population  OTB_DEMSP
Ds8   not belong to same population  OTB_DEMSP
Ds9   not belong to same population  OTB_DEMSP
Ds10  not belong to same population  OTB_DEMSP
Ds11  not belong to same population  OTB_DEMSP
Ds12  not belong to same population  OTB_DEMSP
Ds13  not belong to same population  OTB_DEMSP
Ds14  not belong to same population  OTB_DEMSP
Ds15  not belong to same population  OTB_DEMSP
Ds16  not belong to same population  OTB_DEMSP
Ds17  not belong to same population  OTB_DEMSP
Ds18  not belong to same population  OTB_DEMSP
Ds19  not belong to same population  OTB_DEMSP
Ds20  not belong to same population  OTB_DEMSP
Ds21  not belong to same population  OTB_DEMSP
Ds22  not belong to same population  OTB_DEMSP
Ds23  not belong to same population  OTB_DEMSP
Ds24  not belong to same population  OTB_DEMSP
Ds25  not belong to same population  OTB_DEMSP
Ds26  not belong to same population  OTB_DEMSP
Ds27  not belong to same population  OTB_DEMSP
Ds28  not belong to same population  OTB_DEMSP
Ds29  not belong to same population  OTB_DEMSP
Ds30  not belong to same population  OTB_DEMSP
Ds31  not belong to same population  OTB_DEMSP
Ds32  not belong to same population  OTB_DEMSP
Ds33  not belong to same population  OTB_DEMSP
Ds34  not belong to same population  OTB_DEMSP
Ds35  not belong to same population  OTB_DEMSP
Ds36  not belong to same population  OTB_DEMSP
Ds37  not belong to same population  OTB_DEMSP
Ds38  not belong to same population  OTB_DEMSP
Ds39  not belong to same population  OTB_DEMSP
Ds40  not belong to same population  OTB_DEMSP
Ds41  not belong to same population  OTB_DEMSP
Ds42  not belong to same population  OTB_DEMSP
Ds43  not belong to same population  OTB_DEMSP
Ds44  not belong to same population  OTB_DEMSP
Ds45  not belong to same population  OTB_DEMSP
Ds46  not belong to same population  OTB_DEMSP
Ds47  not belong to same population  OTB_DEMSP
Ds48  not belong to same population  OTB_DEMSP
Ds49  not belong to same population  OTB_DEMSP
Ds50  not belong to same population  OTB_DEMSP
Ds51  not belong to same population  OTB_DEMSP
Ds52  not belong to same population  OTB_DEMSP
Ds53  not belong to same population  OTB_DEMSP
Ds54  not belong to same population  OTB_DEMSP
Ds55  not belong to same population  OTB_DEMSP
Ds56  not belong to same population  OTB_DEMSP
Ds57  not belong to same population  OTB_DEMSP
Ds58  not belong to same population  OTB_DEMSP
Ds59  not belong to same population  OTB_DEMSP
Ds60  not belong to same population  OTB_DEMSP
Ds61  not belong to same population  OTB_DEMSP
Ds62  not belong to same population  OTB_DEMSP
Ds63  not belong to same population  OTB_DEMSP
Ds64  not belong to same population  OTB_DEMSP
Ds65  not belong to same population  OTB_DEMSP
Ds66  not belong to same population  OTB_DEMSP
Ds67  not belong to same population  OTB_DEMSP
Ds68  not belong to same population  OTB_DEMSP
Ds69  not belong to same population  OTB_DEMSP
Ds70  not belong to same population  OTB_DEMSP
Ds71  not belong to same population  OTB_DEMSP
Ds72  not belong to same population  OTB_DEMSP
Ds73  not belong to same population  OTB_DEMSP
Ds74  not belong to same population  OTB_DEMSP
Ds75  not belong to same population  OTB_DEMSP
Ds76  not belong to same population  OTB_DEMSP
Ds77  not belong to same population  OTB_DEMSP
Ds78  not belong to same population  OTB_DEMSP
Ds79      belong to same population   OTB_DWSP
Ds110 not belong to same population OTB_MDDWSP
Ds210 not belong to same population OTB_MDDWSP
Ds310 not belong to same population OTB_MDDWSP
Ds410 not belong to same population OTB_MDDWSP
Ds510 not belong to same population OTB_MDDWSP
Ds610 not belong to same population OTB_MDDWSP
Ds710 not belong to same population OTB_MDDWSP
Ds81  not belong to same population OTB_MDDWSP
Ds91  not belong to same population OTB_MDDWSP
Ds101 not belong to same population OTB_MDDWSP
Ds111 not belong to same population OTB_MDDWSP
Ds121 not belong to same population OTB_MDDWSP
Ds131 not belong to same population OTB_MDDWSP
Ds141 not belong to same population OTB_MDDWSP
Ds151 not belong to same population OTB_MDDWSP
Ds161 not belong to same population OTB_MDDWSP
Ds171 not belong to same population OTB_MDDWSP
Ds181 not belong to same population OTB_MDDWSP
Ds191 not belong to same population OTB_MDDWSP
Ds201 not belong to same population OTB_MDDWSP
Ds211 not belong to same population OTB_MDDWSP
Ds221 not belong to same population OTB_MDDWSP
Ds231 not belong to same population OTB_MDDWSP
Ds241 not belong to same population OTB_MDDWSP
Ds251 not belong to same population OTB_MDDWSP
Ds261 not belong to same population OTB_MDDWSP
Ds271 not belong to same population OTB_MDDWSP
Ds281 not belong to same population OTB_MDDWSP
Ds291 not belong to same population OTB_MDDWSP
Ds301 not belong to same population OTB_MDDWSP
Ds311 not belong to same population OTB_MDDWSP
Ds321 not belong to same population OTB_MDDWSP
Ds331 not belong to same population OTB_MDDWSP
Ds341 not belong to same population OTB_MDDWSP
Ds351 not belong to same population OTB_MDDWSP
Ds361 not belong to same population OTB_MDDWSP
Ds371 not belong to same population OTB_MDDWSP
Ds381 not belong to same population OTB_MDDWSP
Ds391 not belong to same population OTB_MDDWSP
Ds401 not belong to same population OTB_MDDWSP
Ds411 not belong to same population OTB_MDDWSP
Ds421 not belong to same population OTB_MDDWSP
Ds431 not belong to same population OTB_MDDWSP
Ds441 not belong to same population OTB_MDDWSP
Ds451 not belong to same population OTB_MDDWSP
Ds461 not belong to same population OTB_MDDWSP
Ds471 not belong to same population OTB_MDDWSP
Ds481 not belong to same population OTB_MDDWSP
Ds491 not belong to same population OTB_MDDWSP
Ds501 not belong to same population OTB_MDDWSP
Ds511 not belong to same population OTB_MDDWSP
Ds521 not belong to same population OTB_MDDWSP
Ds531 not belong to same population OTB_MDDWSP
Ds541 not belong to same population OTB_MDDWSP
Ds551 not belong to same population OTB_MDDWSP
Ds561 not belong to same population OTB_MDDWSP
Ds571 not belong to same population OTB_MDDWSP
Ds581 not belong to same population OTB_MDDWSP
Ds591 not belong to same population OTB_MDDWSP
Ds601 not belong to same population OTB_MDDWSP
Ds611 not belong to same population OTB_MDDWSP
Ds621 not belong to same population OTB_MDDWSP
Ds631 not belong to same population OTB_MDDWSP
Ds641 not belong to same population OTB_MDDWSP
Ds651 not belong to same population OTB_MDDWSP
Ds661 not belong to same population OTB_MDDWSP

[[2]]
NULL

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_ks", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_land_mean_weight")
> ### * MEDBS_land_mean_weight
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_land_mean_weight
> ### Title: Mean weight by year,gear and fishery aggregation
> ### Aliases: MEDBS_land_mean_weight
> 
> ### ** Examples
> 
> MEDBS_land_mean_weight(land=Landing_tab_example,MS="ITA",GSA=11,SP="ARA")
Warning in min(MWdbpositive$year) :
  no non-missing arguments to min; returning Inf
Warning in max(MWdbpositive$year) :
  no non-missing arguments to max; returning -Inf
Error in seq.default(min(MWdbpositive$year), max(MWdbpositive$year), by = 4) : 
  'from' must be a finite number
Calls: MEDBS_land_mean_weight ... continuous_scale -> check_breaks_labels -> seq -> seq.default
Execution halted
