
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "RDBqc"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "RDBqc-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('RDBqc')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("GP_check")
> ### * GP_check
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: GP_check
> ### Title: GP_tab (growth params) table check
> ### Aliases: GP_check
> 
> ### ** Examples
> 
> GP_check(GP_tab_example,"MUT","ITA","SA 18")
   COUNTRY  YEAR START_YEAR END_YEAR SPECIES SEX
1      ITA SA 18       2014     2014     MUT   C
2      ITA SA 18       2015     2015     MUT   C
3      ITA SA 18       2016     2016     MUT   C
4      ITA SA 18       2017     2017     MUT   C
5      ITA SA 18       2014     2014     MUT   F
6      ITA SA 18       2015     2015     MUT   F
7      ITA SA 18       2016     2016     MUT   F
8      ITA SA 18       2017     2017     MUT   F
9      ITA SA 18       2014     2014     MUT   M
10     ITA SA 18       2015     2015     MUT   M
11     ITA SA 18       2016     2016     MUT   M
12     ITA SA 18       2017     2017     MUT   M
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("GP_check", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("LW_check_MED_BS")
> ### * LW_check_MED_BS
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: LW_check_MED_BS
> ### Title: LW params in GP_tab (sex ratio at length) table check#'
> ### Aliases: LW_check_MED_BS
> 
> ### ** Examples
> 
> LW_check_MED_BS(GP_tab_example,"MUT","ITA","SA 18")
   COUNTRY  YEAR START_YEAR END_YEAR SPECIES SEX NA
1      ITA SA 18       2014     2014     MUT   C  1
2      ITA SA 18       2015     2015     MUT   C  1
3      ITA SA 18       2016     2016     MUT   C  1
4      ITA SA 18       2017     2017     MUT   C  1
5      ITA SA 18       2014     2014     MUT   F  1
6      ITA SA 18       2015     2015     MUT   F  1
7      ITA SA 18       2016     2016     MUT   F  1
8      ITA SA 18       2017     2017     MUT   F  1
9      ITA SA 18       2014     2014     MUT   M  1
10     ITA SA 18       2015     2015     MUT   M  1
11     ITA SA 18       2016     2016     MUT   M  1
12     ITA SA 18       2017     2017     MUT   M  1
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("LW_check_MED_BS", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("Landing_coverage")
> ### * Landing_coverage
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Landing_coverage
> ### Title: Landing_cov: function to check the coverage in Landing table
> ### Aliases: Landing_coverage
> 
> ### ** Examples
> 
> Landing_coverage(Landing_tab_example,"DPS","ITA","9")
Joining, by = c("YEAR", "GEAR")
   COUNTRY YEAR QUARTER VESSEL_LENGTH GEAR MESH_SIZE_RANGE FISHERY AREA SPECIES
1      ITA 2003      -1            -1  OTB          50D100      -1    9     DPS
2      ITA 2004      -1            -1  OTB          50D100      -1    9     DPS
3      ITA 2004      -1            -1  GNS              -1    DEMF    9     DPS
4      ITA 2007      -1            -1  GNS              -1    DEMF    9     DPS
5      ITA 2008      -1            -1  GNS              -1    DEMF    9     DPS
6      ITA 2014      -1            -1  GNS              -1    DEMF    9     DPS
7      ITA 2017       2            -1  GNS              -1    DEMF    9     DPS
8      ITA 2003      -1            -1  GTR              -1   DEMSP    9     DPS
9      ITA 2004      -1            -1  GTR              -1   DEMSP    9     DPS
10     ITA 2005      -1            -1  GTR              -1   DEMSP    9     DPS
11     ITA 2012      -1            -1  GTR              -1   DEMSP    9     DPS
12     ITA 2005      -1            -1  OTB          50D100   DEMSP    9     DPS
13     ITA 2006      -1            -1  OTB          50D100   DEMSP    9     DPS
14     ITA 2007      -1            -1  OTB          50D100   DEMSP    9     DPS
15     ITA 2008      -1            -1  OTB          50D100   DEMSP    9     DPS
16     ITA 2009      -1            -1  OTB          50D100   DEMSP    9     DPS
17     ITA 2010      -1            -1  OTB          50D100   DEMSP    9     DPS
18     ITA 2011      -1            -1  OTB          50D100   DEMSP    9     DPS
19     ITA 2012      -1            -1  OTB          50D100   DEMSP    9     DPS
20     ITA 2013      -1            -1  OTB          50D100   DEMSP    9     DPS
21     ITA 2014      -1            -1  OTB          50D100   DEMSP    9     DPS
22     ITA 2015      -1            -1  OTB          50D100   DEMSP    9     DPS
23     ITA 2016       1            -1  OTB          50D100   DEMSP    9     DPS
24     ITA 2017       1            -1  OTB          50D100   DEMSP    9     DPS
25     ITA 2016       2            -1  OTB          50D100   DEMSP    9     DPS
26     ITA 2017       2            -1  OTB          50D100   DEMSP    9     DPS
27     ITA 2016       3            -1  OTB          50D100   DEMSP    9     DPS
28     ITA 2017       3            -1  OTB          50D100   DEMSP    9     DPS
29     ITA 2016       4            -1  OTB          50D100   DEMSP    9     DPS
30     ITA 2017       4            -1  OTB          50D100   DEMSP    9     DPS
31     ITA 2008      -1            -1  OTB          50D100    DWSP    9     DPS
32     ITA 2010      -1            -1  OTB          50D100    DWSP    9     DPS
33     ITA 2011      -1            -1  OTB          50D100    DWSP    9     DPS
34     ITA 2012      -1            -1  OTB          50D100    DWSP    9     DPS
35     ITA 2013      -1            -1  OTB          50D100    DWSP    9     DPS
36     ITA 2014      -1            -1  OTB          50D100    DWSP    9     DPS
37     ITA 2015      -1            -1  OTB          50D100    DWSP    9     DPS
38     ITA 2016      -1            -1  OTB          50D100    DWSP    9     DPS
39     ITA 2005      -1            -1  OTB          50D100  MDDWSP    9     DPS
40     ITA 2006      -1            -1  OTB          50D100  MDDWSP    9     DPS
41     ITA 2007      -1            -1  OTB          50D100  MDDWSP    9     DPS
42     ITA 2008      -1            -1  OTB          50D100  MDDWSP    9     DPS
43     ITA 2009      -1            -1  OTB          50D100  MDDWSP    9     DPS
44     ITA 2010      -1            -1  OTB          50D100  MDDWSP    9     DPS
45     ITA 2011      -1            -1  OTB          50D100  MDDWSP    9     DPS
46     ITA 2012      -1            -1  OTB          50D100  MDDWSP    9     DPS
47     ITA 2013      -1            -1  OTB          50D100  MDDWSP    9     DPS
48     ITA 2014      -1            -1  OTB          50D100  MDDWSP    9     DPS
49     ITA 2015      -1            -1  OTB          50D100  MDDWSP    9     DPS
50     ITA 2016       1            -1  OTB          50D100  MDDWSP    9     DPS
51     ITA 2017       1            -1  OTB          50D100  MDDWSP    9     DPS
52     ITA 2016       2            -1  OTB          50D100  MDDWSP    9     DPS
53     ITA 2017       2            -1  OTB          50D100  MDDWSP    9     DPS
54     ITA 2016       3            -1  OTB          50D100  MDDWSP    9     DPS
55     ITA 2017       3            -1  OTB          50D100  MDDWSP    9     DPS
56     ITA 2016       4            -1  OTB          50D100  MDDWSP    9     DPS
57     ITA 2017       4            -1  OTB          50D100  MDDWSP    9     DPS
     LANDINGS
1  316.615971
2  367.431910
3    3.628830
4    2.263080
5    0.508290
6    0.027360
7    0.026880
8    5.933227
9    4.177760
10   0.517960
11   0.161160
12  41.955260
13  55.302990
14  89.849750
15 187.262190
16 238.541980
17 309.589920
18 404.501390
19 483.420540
20 426.367160
21 466.692420
22 663.633400
23 158.379000
24 168.457870
25 165.632000
26 226.377570
27 157.255000
28 163.881790
29 167.289000
30 171.422780
31   0.164650
32   9.691160
33   9.676960
34   5.543910
35   3.829750
36   2.112830
37   8.549960
38  10.478000
39 388.470180
40 407.103060
41 125.318150
42  66.065310
43  64.598710
44 154.013300
45 136.853120
46 132.123730
47 145.464160
48  92.632310
49 119.266000
50  15.353000
51  16.607640
52  79.350000
53  45.163590
54  61.089000
55  49.455210
56  20.785000
57  15.440050
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Landing_coverage", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MA_tab_check")
> ### * MA_tab_check
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MA_tab_check
> ### Title: MA_tab (maturity at age) table check
> ### Aliases: MA_tab_check
> 
> ### ** Examples
> 
> MA_tab_check(MA_tab_example,"DPS","ITA","9")
Warning: Ignoring unknown parameters: binwidth
   COUNTRY YEAR START_YEAR END_YEAR SPECIES   SEX
1      ITA    9       2006     2006     DPS FALSE
2      ITA    9       2007     2007     DPS FALSE
3      ITA    9       2008     2008     DPS FALSE
4      ITA    9       2009     2009     DPS FALSE
5      ITA    9       2010     2010     DPS FALSE
6      ITA    9       2011     2011     DPS FALSE
7      ITA    9       2012     2012     DPS FALSE
8      ITA    9       2013     2013     DPS FALSE
9      ITA    9       2014     2014     DPS FALSE
10     ITA    9       2015     2015     DPS FALSE
11     ITA    9       2016     2016     DPS FALSE
12     ITA    9       2017     2016     DPS FALSE
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MA_tab_check", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_Catch_coverage")
> ### * MEDBS_Catch_coverage
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_Catch_coverage
> ### Title: Catch_cov: function to check the coverage in Catch table
> ### Aliases: MEDBS_Catch_coverage
> 
> ### ** Examples
> 
> MEDBS_Catch_coverage(Catch_tab_example,"DPS","ITA","9")
Joining, by = c("YEAR", "GEAR")
Joining, by = c("YEAR", "GEAR")
[[1]]
   COUNTRY YEAR QUARTER VESSEL_LENGTH GEAR MESH_SIZE_RANGE FISHERY AREA SPECIES
1      ITA 2004      -1            -1  OTB          50D100      -1    9     DPS
2      ITA 2004      -1            -1  GNS              -1    DEMF    9     DPS
3      ITA 2007      -1            -1  GNS              -1    DEMF    9     DPS
4      ITA 2008      -1            -1  GNS              -1    DEMF    9     DPS
5      ITA 2014      -1            -1  GNS              -1    DEMF    9     DPS
6      ITA 2017       2            -1  GNS              -1    DEMF    9     DPS
7      ITA 2003      -1            -1  GTR              -1   DEMSP    9     DPS
8      ITA 2004      -1            -1  GTR              -1   DEMSP    9     DPS
9      ITA 2005      -1            -1  GTR              -1   DEMSP    9     DPS
10     ITA 2012      -1            -1  GTR              -1   DEMSP    9     DPS
11     ITA 2003      -1            -1  OTB              -1   DEMSP    9     DPS
12     ITA 2005      -1            -1  OTB          50D100   DEMSP    9     DPS
13     ITA 2006      -1            -1  OTB          50D100   DEMSP    9     DPS
14     ITA 2007      -1            -1  OTB          50D100   DEMSP    9     DPS
15     ITA 2008      -1            -1  OTB          50D100   DEMSP    9     DPS
16     ITA 2009      -1            -1  OTB          50D100   DEMSP    9     DPS
17     ITA 2010      -1            -1  OTB          50D100   DEMSP    9     DPS
18     ITA 2011      -1            -1  OTB          50D100   DEMSP    9     DPS
19     ITA 2012      -1            -1  OTB          50D100   DEMSP    9     DPS
20     ITA 2013      -1            -1  OTB          50D100   DEMSP    9     DPS
21     ITA 2014      -1            -1  OTB          50D100   DEMSP    9     DPS
22     ITA 2015      -1            -1  OTB          50D100   DEMSP    9     DPS
23     ITA 2016       1            -1  OTB          50D100   DEMSP    9     DPS
24     ITA 2017       1            -1  OTB          50D100   DEMSP    9     DPS
25     ITA 2016       2            -1  OTB          50D100   DEMSP    9     DPS
26     ITA 2017       2            -1  OTB          50D100   DEMSP    9     DPS
27     ITA 2016       3            -1  OTB          50D100   DEMSP    9     DPS
28     ITA 2017       3            -1  OTB          50D100   DEMSP    9     DPS
29     ITA 2016       4            -1  OTB          50D100   DEMSP    9     DPS
30     ITA 2017       4            -1  OTB          50D100   DEMSP    9     DPS
31     ITA 2008      -1            -1  OTB          50D100    DWSP    9     DPS
32     ITA 2010      -1            -1  OTB          50D100    DWSP    9     DPS
33     ITA 2011      -1            -1  OTB          50D100    DWSP    9     DPS
34     ITA 2012      -1            -1  OTB          50D100    DWSP    9     DPS
35     ITA 2013      -1            -1  OTB          50D100    DWSP    9     DPS
36     ITA 2014      -1            -1  OTB          50D100    DWSP    9     DPS
37     ITA 2015      -1            -1  OTB          50D100    DWSP    9     DPS
38     ITA 2016      -1            -1  OTB          50D100    DWSP    9     DPS
39     ITA 2005      -1            -1  OTB          50D100  MDDWSP    9     DPS
40     ITA 2006      -1            -1  OTB          50D100  MDDWSP    9     DPS
41     ITA 2007      -1            -1  OTB          50D100  MDDWSP    9     DPS
42     ITA 2008      -1            -1  OTB          50D100  MDDWSP    9     DPS
43     ITA 2009      -1            -1  OTB          50D100  MDDWSP    9     DPS
44     ITA 2010      -1            -1  OTB          50D100  MDDWSP    9     DPS
45     ITA 2011      -1            -1  OTB          50D100  MDDWSP    9     DPS
46     ITA 2012      -1            -1  OTB          50D100  MDDWSP    9     DPS
47     ITA 2013      -1            -1  OTB          50D100  MDDWSP    9     DPS
48     ITA 2014      -1            -1  OTB          50D100  MDDWSP    9     DPS
49     ITA 2015      -1            -1  OTB          50D100  MDDWSP    9     DPS
50     ITA 2016       1            -1  OTB          50D100  MDDWSP    9     DPS
51     ITA 2017       1            -1  OTB          50D100  MDDWSP    9     DPS
52     ITA 2016       2            -1  OTB          50D100  MDDWSP    9     DPS
53     ITA 2017       2            -1  OTB          50D100  MDDWSP    9     DPS
54     ITA 2016       3            -1  OTB          50D100  MDDWSP    9     DPS
55     ITA 2017       3            -1  OTB          50D100  MDDWSP    9     DPS
56     ITA 2016       4            -1  OTB          50D100  MDDWSP    9     DPS
57     ITA 2017       4            -1  OTB          50D100  MDDWSP    9     DPS
     LANDINGS
1  367.431910
2    3.628830
3    2.263080
4    0.508290
5    0.027360
6    0.026880
7    5.933227
8    4.177760
9    0.517960
10   0.161160
11 316.615971
12  41.955260
13  55.302990
14  89.849750
15 187.262190
16 238.541980
17 309.589920
18 404.501390
19 483.420540
20 426.367160
21 466.692420
22 663.633400
23 158.379000
24 168.457870
25 165.632000
26 226.377570
27 157.255000
28 163.881790
29 167.289000
30 171.422780
31   0.164650
32   9.691160
33   9.676960
34   5.543910
35   3.829750
36   2.112830
37   8.549960
38  10.478000
39 388.470180
40 407.103060
41 125.318150
42  66.065310
43  64.598710
44 154.013300
45 136.853120
46 132.123730
47 145.464160
48  92.632310
49 119.266000
50  15.353000
51  16.607640
52  79.350000
53  45.163590
54  61.089000
55  49.455210
56  20.785000
57  15.440050

[[2]]
   COUNTRY YEAR QUARTER VESSEL_LENGTH GEAR MESH_SIZE_RANGE FISHERY AREA SPECIES
5      ITA 2014      -1            -1  GNS              -1    DEMF    9     DPS
6      ITA 2017       2            -1  GNS              -1    DEMF    9     DPS
7      ITA 2003      -1            -1  GTR              -1   DEMSP    9     DPS
10     ITA 2012      -1            -1  GTR              -1   DEMSP    9     DPS
11     ITA 2003      -1            -1  OTB              -1   DEMSP    9     DPS
13     ITA 2006      -1            -1  OTB          50D100   DEMSP    9     DPS
16     ITA 2009      -1            -1  OTB          50D100   DEMSP    9     DPS
17     ITA 2010      -1            -1  OTB          50D100   DEMSP    9     DPS
18     ITA 2011      -1            -1  OTB          50D100   DEMSP    9     DPS
19     ITA 2012      -1            -1  OTB          50D100   DEMSP    9     DPS
20     ITA 2013      -1            -1  OTB          50D100   DEMSP    9     DPS
21     ITA 2014      -1            -1  OTB          50D100   DEMSP    9     DPS
22     ITA 2015      -1            -1  OTB          50D100   DEMSP    9     DPS
23     ITA 2016       1            -1  OTB          50D100   DEMSP    9     DPS
24     ITA 2017       1            -1  OTB          50D100   DEMSP    9     DPS
25     ITA 2016       2            -1  OTB          50D100   DEMSP    9     DPS
26     ITA 2017       2            -1  OTB          50D100   DEMSP    9     DPS
27     ITA 2016       3            -1  OTB          50D100   DEMSP    9     DPS
28     ITA 2017       3            -1  OTB          50D100   DEMSP    9     DPS
29     ITA 2016       4            -1  OTB          50D100   DEMSP    9     DPS
30     ITA 2017       4            -1  OTB          50D100   DEMSP    9     DPS
33     ITA 2011      -1            -1  OTB          50D100    DWSP    9     DPS
34     ITA 2012      -1            -1  OTB          50D100    DWSP    9     DPS
35     ITA 2013      -1            -1  OTB          50D100    DWSP    9     DPS
37     ITA 2015      -1            -1  OTB          50D100    DWSP    9     DPS
38     ITA 2016      -1            -1  OTB          50D100    DWSP    9     DPS
40     ITA 2006      -1            -1  OTB          50D100  MDDWSP    9     DPS
43     ITA 2009      -1            -1  OTB          50D100  MDDWSP    9     DPS
44     ITA 2010      -1            -1  OTB          50D100  MDDWSP    9     DPS
45     ITA 2011      -1            -1  OTB          50D100  MDDWSP    9     DPS
46     ITA 2012      -1            -1  OTB          50D100  MDDWSP    9     DPS
47     ITA 2013      -1            -1  OTB          50D100  MDDWSP    9     DPS
48     ITA 2014      -1            -1  OTB          50D100  MDDWSP    9     DPS
49     ITA 2015      -1            -1  OTB          50D100  MDDWSP    9     DPS
50     ITA 2016       1            -1  OTB          50D100  MDDWSP    9     DPS
51     ITA 2017       1            -1  OTB          50D100  MDDWSP    9     DPS
52     ITA 2016       2            -1  OTB          50D100  MDDWSP    9     DPS
53     ITA 2017       2            -1  OTB          50D100  MDDWSP    9     DPS
54     ITA 2016       3            -1  OTB          50D100  MDDWSP    9     DPS
55     ITA 2017       3            -1  OTB          50D100  MDDWSP    9     DPS
56     ITA 2016       4            -1  OTB          50D100  MDDWSP    9     DPS
57     ITA 2017       4            -1  OTB          50D100  MDDWSP    9     DPS
    DISCARDS
5   0.000000
6   0.000000
7   0.000000
10  0.000000
11  0.000000
13  0.000000
16 38.355420
17 24.396528
18 60.519315
19  6.571266
20 26.761695
21 44.978926
22 89.320018
23  4.321935
24 16.215517
25  2.726606
26 10.594472
27 18.256248
28  0.000000
29  4.391166
30 14.491513
33  0.000000
34  0.000000
35  0.000000
37  0.000000
38  0.000000
40  0.000000
43  0.000000
44  2.703603
45  2.743526
46  0.996779
47  3.279211
48  0.000000
49  0.000000
50  1.122239
51  0.165092
52  4.120538
53  0.000000
54  0.000000
55  0.000000
56  0.000000
57  0.000000

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_Catch_coverage", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_check_duplicates")
> ### * MEDBS_check_duplicates
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_check_duplicates
> ### Title: Check for duplicated data rows
> ### Aliases: MEDBS_check_duplicates
> 
> ### ** Examples
> 
> MEDBS_check_duplicates(data=landing,type="l",MS="ITA",GSA="18",SP="ARA",verbose=TRUE)
No duplicated records in the data.
NULL
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_check_duplicates", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_comp_disc_YQ")
> ### * MEDBS_comp_disc_YQ
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_comp_disc_YQ
> ### Title: Comparison between discards in weight by quarter and -1
> ### Aliases: MEDBS_comp_disc_YQ
> 
> ### ** Examples
> 
> MEDBS_comp_disc_YQ(disc=Discard_tab_example,MS="ITA",GSA=9,SP="DPS")
  year gear    tot_q    tot_yr ratio
1 2009  OTB       NA 38.355420    NA
2 2010  OTB       NA 27.100131    NA
3 2011  OTB       NA 63.262841    NA
4 2012  OTB       NA  7.568045    NA
5 2013  OTB       NA 30.040906    NA
6 2014  OTB       NA 44.978926    NA
7 2015  OTB       NA 89.320018    NA
8 2016  OTB 34.93873        NA    NA
9 2017  OTB 41.46659        NA    NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_comp_disc_YQ", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_comp_disc_YQ_fishery")
> ### * MEDBS_comp_disc_YQ_fishery
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_comp_disc_YQ_fishery
> ### Title: Comparison between discards in weight by quarter, quarter -1 and
> ###   by fishery
> ### Aliases: MEDBS_comp_disc_YQ_fishery
> 
> ### ** Examples
> 
> MEDBS_comp_disc_YQ(disc=Discard_tab_example,MS="ITA",GSA=9,SP="DPS")
  year gear    tot_q    tot_yr ratio
1 2009  OTB       NA 38.355420    NA
2 2010  OTB       NA 27.100131    NA
3 2011  OTB       NA 63.262841    NA
4 2012  OTB       NA  7.568045    NA
5 2013  OTB       NA 30.040906    NA
6 2014  OTB       NA 44.978926    NA
7 2015  OTB       NA 89.320018    NA
8 2016  OTB 34.93873        NA    NA
9 2017  OTB 41.46659        NA    NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_comp_disc_YQ_fishery", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_comp_land_Q_VL_fishery")
> ### * MEDBS_comp_land_Q_VL_fishery
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_comp_land_Q_VL_fishery
> ### Title: Comparison between landings in weight by quarter and fishery
> ###   accounting for vessel length
> ### Aliases: MEDBS_comp_land_Q_VL_fishery
> 
> ### ** Examples
> 
> MEDBS_comp_land_Q_VL_fishery(land=landing,MS="ITA",GSA=11,SP="ARA")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
Joining, by = c("year", "gear", "fishery", "quarter")
   year gear fishery quarter   tot_VL  tot_NoVL ratio
1  2009  OTB      -1      -1 65.25162        NA    NA
2  2010  OTB      -1      -1 53.33388        NA    NA
3  2011  OTB      -1      -1 59.41221        NA    NA
4  2012  OTB      -1      -1 57.27200        NA    NA
5  2013  OTB      -1      -1 40.52084        NA    NA
6  2014  OTB      -1      -1 46.42420        NA    NA
7  2005  OTB      NA      -1       NA  97.72260    NA
8  2006  OTB      NA      -1       NA 171.72925    NA
9  2007  OTB      NA      -1       NA  56.53758    NA
10 2008  OTB      NA      -1       NA  74.64212    NA
11 2015  OTB     DWS       1  0.25600        NA    NA
12 2015  OTB     DWS       2  5.49900        NA    NA
13 2015  OTB     DWS       3  5.41600        NA    NA
14 2015  OTB      NA      -1       NA  46.25110    NA
15 2016  OTB     DWS       1  5.34800        NA    NA
16 2016  OTB     DWS       2 10.01000        NA    NA
17 2016  OTB     DWS       3  7.49000        NA    NA
18 2016  OTB     DWS       4  1.23300        NA    NA
19 2016  OTB     MDD      -1       NA  65.31905    NA
20 2017  OTB     DWS       1  2.98200        NA    NA
21 2017  OTB     DWS       2  4.18800        NA    NA
22 2017  OTB     DWS       3 13.23800        NA    NA
23 2017  OTB     DWS       4  1.58800        NA    NA
24 2017  OTB     MDD       1       NA  18.57300    NA
25 2017  OTB     MDD       2       NA  31.93811    NA
26 2017  OTB     MDD       3       NA  22.51660    NA
27 2017  OTB     MDD       4       NA  14.99857    NA
28 2018  OTB     DWS       1 34.83800        NA    NA
29 2018  OTB     DWS       2 78.38100        NA    NA
30 2018  OTB     DWS       3 48.87600        NA    NA
31 2018  OTB     DWS       4 32.51400        NA    NA
32 2018  OTB     MDD       1       NA  14.33637    NA
33 2018  OTB     MDD       2       NA  27.11435    NA
34 2018  OTB     MDD       3       NA  33.12960    NA
35 2018  OTB     MDD       4       NA  15.29823    NA
36 2019  OTB     DWS       1       NA   3.13910    NA
37 2019  OTB     DWS       2       NA   5.97575    NA
38 2019  OTB     DWS       3       NA   2.65112    NA
39 2019  OTB     DWS       4       NA   3.80342    NA
40 2019  OTB     MDD       1       NA  22.14817    NA
41 2019  OTB     MDD       2       NA  32.24053    NA
42 2019  OTB     MDD       3       NA  24.14981    NA
43 2019  OTB     MDD       4       NA  12.89522    NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_comp_land_Q_VL_fishery", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_comp_land_YQ")
> ### * MEDBS_comp_land_YQ
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_comp_land_YQ
> ### Title: Comparison between landings in weight by quarter and -1
> ### Aliases: MEDBS_comp_land_YQ
> 
> ### ** Examples
> 
> MEDBS_comp_land_YQ(land=landing,MS="ITA",GSA=11,SP="ARA")
   year gear    tot_q    tot_yr     ratio
1  2009  OTB       NA  65.25162        NA
2  2010  OTB       NA  53.33388        NA
3  2011  OTB       NA  59.41221        NA
4  2012  OTB       NA  57.27200        NA
5  2013  OTB       NA  40.52084        NA
6  2014  OTB       NA  46.42420        NA
7  2005  OTB       NA  97.72260        NA
8  2006  OTB       NA 171.72925        NA
9  2007  OTB       NA  56.53758        NA
10 2008  OTB       NA  74.64212        NA
11 2015  OTB  11.1710  46.25110 0.2415294
12 2016  OTB  24.0810  65.31905 0.3686673
13 2017  OTB 110.0223        NA        NA
14 2018  OTB 284.4875        NA        NA
15 2019  OTB 107.0031        NA        NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_comp_land_YQ", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_comp_land_YQ_VL")
> ### * MEDBS_comp_land_YQ_VL
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_comp_land_YQ_VL
> ### Title: Comparison between landings in weight by quarter accounting for
> ###   vessel length
> ### Aliases: MEDBS_comp_land_YQ_VL
> 
> ### ** Examples
> 
> MEDBS_comp_land_YQ_VL(land=landing,MS="ITA",GSA=11,SP="ARA")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
Joining, by = c("year", "gear", "quarter")
   year gear quarter   tot_VL  tot_NoVL     ratio
1  2009  OTB      -1 65.25162        NA        NA
2  2010  OTB      -1 53.33388        NA        NA
3  2011  OTB      -1 59.41221        NA        NA
4  2012  OTB      -1 57.27200        NA        NA
5  2013  OTB      -1 40.52084        NA        NA
6  2014  OTB      -1 46.42420        NA        NA
7  2005  OTB      -1       NA  97.72260        NA
8  2006  OTB      -1       NA 171.72925        NA
9  2007  OTB      -1       NA  56.53758        NA
10 2008  OTB      -1       NA  74.64212        NA
11 2015  OTB       1  0.25600        NA        NA
12 2015  OTB       2  5.49900        NA        NA
13 2015  OTB       3  5.41600        NA        NA
14 2015  OTB      -1       NA  46.25110        NA
15 2016  OTB       1  5.34800        NA        NA
16 2016  OTB       2 10.01000        NA        NA
17 2016  OTB       3  7.49000        NA        NA
18 2016  OTB       4  1.23300        NA        NA
19 2016  OTB      -1       NA  65.31905        NA
20 2017  OTB       1  2.98200  18.57300 0.1605556
21 2017  OTB       2  4.18800  31.93811 0.1311286
22 2017  OTB       3 13.23800  22.51660 0.5879218
23 2017  OTB       4  1.58800  14.99857 0.1058768
24 2018  OTB       1 34.83800  14.33637 2.4300433
25 2018  OTB       2 78.38100  27.11435 2.8907571
26 2018  OTB       3 48.87600  33.12960 1.4752970
27 2018  OTB       4 32.51400  15.29823 2.1253439
28 2019  OTB       1       NA  25.28727        NA
29 2019  OTB       2       NA  38.21628        NA
30 2019  OTB       3       NA  26.80093        NA
31 2019  OTB       4       NA  16.69864        NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_comp_land_YQ_VL", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_comp_land_YQ_fishery")
> ### * MEDBS_comp_land_YQ_fishery
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_comp_land_YQ_fishery
> ### Title: Comparison between landings in weight by quarter, quarter -1 and
> ###   by fishery
> ### Aliases: MEDBS_comp_land_YQ_fishery
> 
> ### ** Examples
> 
> MEDBS_comp_land_YQ(land=landing,MS="ITA",GSA=11,SP="ARA")
   year gear    tot_q    tot_yr     ratio
1  2009  OTB       NA  65.25162        NA
2  2010  OTB       NA  53.33388        NA
3  2011  OTB       NA  59.41221        NA
4  2012  OTB       NA  57.27200        NA
5  2013  OTB       NA  40.52084        NA
6  2014  OTB       NA  46.42420        NA
7  2005  OTB       NA  97.72260        NA
8  2006  OTB       NA 171.72925        NA
9  2007  OTB       NA  56.53758        NA
10 2008  OTB       NA  74.64212        NA
11 2015  OTB  11.1710  46.25110 0.2415294
12 2016  OTB  24.0810  65.31905 0.3686673
13 2017  OTB 110.0223        NA        NA
14 2018  OTB 284.4875        NA        NA
15 2019  OTB 107.0031        NA        NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MEDBS_comp_land_YQ_fishery", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MEDBS_disc_mean_weight")
> ### * MEDBS_disc_mean_weight
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MEDBS_disc_mean_weight
> ### Title: Mean weight by year,gear and fishery aggregation
> ### Aliases: MEDBS_disc_mean_weight
> 
> ### ** Examples
> 
> MEDBS_disc_mean_weight(disc=discards,MS="ITA",GSA=18,SP="MUT")
Error in MEDBS_disc_mean_weight(disc = discards, MS = "ITA", GSA = 18,  : 
  object 'discards' not found
Execution halted
